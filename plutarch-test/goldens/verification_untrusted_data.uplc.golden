erroneous.int /= bytestring (program 1.0.0 (unIData ((\i0 -> iData (unIData i1)) (bData #666f6f))))
erroneous.(String, Integer) /= (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 ((\i0 -> i5 (mkPairData ((\i0 -> iData (unIData i1)) (i6 (i2 i1))) ((\i0 -> bData (unBData i1)) (i8 (i2 i1))))) (i4 (mkPairData (bData #666f6f) (bData #626172))))) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]))
erroneous.[String] /= [Integer] (program 1.0.0 ((\i0 -> (\i0 -> unListData ((\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i6) (delay (i5 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> bData (unBData i1)) (unListData i1))) (listData (i1 (iData 3) ((\i0 -> i2 i1 i3) (iData 4)))))) (force mkCons)) [  ]))
working.int == int (program 1.0.0 (unIData ((\i0 -> iData (unIData i1)) (iData 42))))
working.(String, String) == (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 ((\i0 -> i5 (mkPairData ((\i0 -> bData (unBData i1)) (i6 (i2 i1))) ((\i0 -> bData (unBData i1)) (i8 (i2 i1))))) (i4 (mkPairData (bData #666f6f) (bData #626172))))) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]))
working.(POpaque, POpaque) == (POpaque, POpaque) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 ((\i0 -> i5 (mkPairData (i6 (i2 i1)) (i8 (i2 i1)))) (i4 (mkPairData i9 i9)))) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]) #d87980))
working.[String] == [String] (program 1.0.0 ((\i0 -> (\i0 -> unListData ((\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i6) (delay (i5 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> bData (unBData i1)) (unListData i1))) (listData (i1 (bData #666f6f) ((\i0 -> i2 i1 i3) (bData #626172)))))) (force mkCons)) [  ]))
example.concatenate two lists (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> error) (listData (i1 (iData 1) (i1 (iData 2) (i1 (iData 3) (i1 (iData 4) (i1 (iData 5) i2)))))) (listData (i1 (iData 6) (i1 (iData 7) (i1 (iData 8) (i1 (iData 9) (i1 (iData 10) i2)))))) #d8799fd8799f9fd8799fd8799fd8799f41a0ff00ffd8799fd8799fd87a9f41a1ffd87a80ffa0d8799f41d0ffffffff80a0a141c0a149736f6d65746f6b656e018080d8799fd8799fd87980d87a80ffd8799fd87b80d87a80ffff9f45ab01fe235c4312301443abcdefff9fd8799f41d09f0102030405060708090affffffd8799f41b0ffffd87a9fd8799fd8799f41a0ff00ffffff) (force mkCons)) [  ]))