erroneous.int /= bytestring (program 1.0.0 ((\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 3) (delay i1) (delay error))) (bData #666f6f)))
erroneous.(String, Integer) /= (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i4 ((\i0 -> i8 (mkPairData ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 3) (delay i1) (delay error))) (i9 (i5 i1))) ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 4) (delay i1) (delay error))) (i11 (i5 i1))))) (i7 i1))) (mkPairData (bData #666f6f) (bData #626172))) (force ifThenElse)) (force chooseData)) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]))
erroneous.[String] /= [Integer] (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> unListData ((\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i7) (delay (i6 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 4) (delay i1) (delay error))) (unListData i1))) (listData i1))) (i1 (iData 3) ((\i0 -> i2 i1 i3) (iData 4)))) (force mkCons)) [  ]))
working.int == int (program 1.0.0 ((\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 3) (delay i1) (delay error))) (iData 42)))
working.(String, String) == (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i4 ((\i0 -> i8 (mkPairData ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 4) (delay i1) (delay error))) (i9 (i5 i1))) ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 4) (delay i1) (delay error))) (i11 (i5 i1))))) (i7 i1))) (mkPairData (bData #666f6f) (bData #626172))) (force ifThenElse)) (force chooseData)) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]))
working.[String] == [String] (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> unListData ((\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i7) (delay (i6 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 4) (delay i1) (delay error))) (unListData i1))) (listData i1))) (i1 (bData #666f6f) ((\i0 -> i2 i1 i3) (bData #626172)))) (force mkCons)) [  ]))
example.concatenate two lists (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i14 (equalsData ((\i0 -> force (i15 (force nullList (i14 i1)) (delay (i13 i1)) (delay error))) (i10 (\i0 -> \i0 -> force (i13 i1 (delay i18) (delay ((\i0 -> force (i17 (equalsByteString (unBData (i15 i1)) ((\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i21 (equalsInteger 1 i2) (delay (i17 (\i0 -> \i0 -> \i0 -> force (i21 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i24 (i2 (i22 i1)) (delay (\i0 -> \i0 -> i2 (i24 i3))) (delay (i3 i2 (i23 i1)))))))) (\i0 -> equalsData ((\i0 -> i21 (i15 i1)) (i20 i2)) ((\i0 -> i21 (i15 i1)) (i20 (i14 i1)))) ((\i0 -> unListData (i20 (i14 i1))) (i19 i4)))) (delay error))) (i13 i2)) (i9 i1)) (unConstrData (i16 (i17 i1)))) (i9 i4) (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i21 (equalsInteger 0 i2) (delay (unBData (i19 i1))) (delay error))) (i13 i2)) (i9 i1)) (unConstrData ((\i0 -> i17 (i10 (i11 i1))) (i16 (i17 (i10 i1)))))) (delay error))) (delay (i18 (i15 (i16 i1)) (i3 (i16 i2)))) (delay (i3 (i16 i2))))) (i8 (i14 i1)))))) ((\i0 -> unListData (i13 ((\i0 -> i15 (i15 (i15 (i15 (i15 (i15 (i7 i1))))))) (i7 i1)))) (i12 (i6 i1))))) (listData ((\i0 -> \i0 -> i12 (\i0 -> \i0 -> force (i15 i1 (delay i3) (delay (i19 (i16 i1) (i2 (i17 i1)))))) i2) (unListData (i8 i3)) (unListData (i8 i2))))) (delay ()) (delay error))) (listData (i12 (iData 1) (i12 (iData 2) (i12 (iData 3) (i12 (iData 4) (i12 (iData 5) i13)))))) (listData (i12 (iData 6) (i12 (iData 7) (i12 (iData 8) (i12 (iData 9) (i12 (iData 10) i13)))))) #d8799fd8799f9fd8799fd8799fd8799f41a0ff00ffd8799fd8799fd87a9f41a1ffd87a80ffa0d8799f41d0ffffffff80a0a141c0a149736f6d65746f6b656e018080d8799fd8799fd87980d87a80ffd8799fd87b80d87a80ffff9f45ab01fe235c4312301443abcdefff9fd8799f41d09f0102030405060708090affffffd8799f41b0ffffd87a9fd8799fd8799f41a0ff00ffffff) (force (force fstPair))) (\i0 -> i9 (i9 i1))) (\i0 -> i2 (unConstrData i1))) (force (force sndPair))) (\i0 -> listData (i2 (\i0 -> iData ((\i0 -> force (i9 (lessThanInteger i1 0) (delay error) (delay i1))) (unIData i1))) (unListData i1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay i10) (delay (i9 (i3 (i6 i1)) (i2 (i7 i1)))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force headList)) (force tailList)) (force ifThenElse)) (force mkCons)) [  ]))