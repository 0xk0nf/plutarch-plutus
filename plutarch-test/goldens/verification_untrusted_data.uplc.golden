erroneous.int /= bytestring (program 1.0.0 ((\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 3) (delay i1) (delay error))) (bData #666f6f)))
erroneous.(String, Integer) /= (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i4 ((\i0 -> i8 (mkPairData ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 3) (delay i1) (delay error))) (i9 (i5 i1))) ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 4) (delay i1) (delay error))) (i11 (i5 i1))))) (i7 i1))) (mkPairData (bData #666f6f) (bData #626172))) (force ifThenElse)) (force chooseData)) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]))
erroneous.[String] /= [Integer] (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> unListData ((\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i7) (delay (i6 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 4) (delay i1) (delay error))) (unListData i1))) (listData i1))) (i1 (iData 3) ((\i0 -> i2 i1 i3) (iData 4)))) (force mkCons)) [  ]))
working.int == int (program 1.0.0 ((\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 3) (delay i1) (delay error))) (iData 42)))
working.(String, String) == (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i4 ((\i0 -> i8 (mkPairData ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 4) (delay i1) (delay error))) (i9 (i5 i1))) ((\i0 -> force (i4 (equalsInteger (i5 i1 0 1 2 3 4) 4) (delay i1) (delay error))) (i11 (i5 i1))))) (i7 i1))) (mkPairData (bData #666f6f) (bData #626172))) (force ifThenElse)) (force chooseData)) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i7 (unConstrData i1)))) (force headList)) (force tailList)) (\i0 -> constrData 0 (i3 (i2 i1) (i3 (i4 i1) i5)))) (force (force fstPair))) (force mkCons)) (force (force sndPair))) [  ]))
working.[String] == [String] (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> unListData ((\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i7) (delay (i6 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 4) (delay i1) (delay error))) (unListData i1))) (listData i1))) (i1 (bData #666f6f) ((\i0 -> i2 i1 i3) (bData #626172)))) (force mkCons)) [  ]))
removing the data wrapper.erroneous.(String, Integer) /= (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> mkPairData (iData (unIData (i5 (i2 i1)))) (bData (unBData (i7 (i2 i1))))) ((\i0 -> constrData 0 (i6 (i5 i1) (i6 (i7 i1) [  ]))) (mkPairData (bData #666f6f) (bData #626172)))) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i6 (unConstrData i1)))) (force headList)) (force tailList)) (force (force fstPair))) (force mkCons)) (force (force sndPair))))
removing the data wrapper.erroneous.[String] /= [Integer] (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay [  ]) (delay (i4 (unBData (force headList i1)) (i2 (force tailList i1)))))) (unListData i1)) (listData (i1 (iData 3) ((\i0 -> i2 i1 [  ]) (iData 4))))) (force mkCons)))
removing the data wrapper.working.(String, String) == (String, String) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> mkPairData (bData (unBData (i5 (i2 i1)))) (bData (unBData (i7 (i2 i1))))) ((\i0 -> constrData 0 (i6 (i5 i1) (i6 (i7 i1) [  ]))) (mkPairData (bData #666f6f) (bData #626172)))) (\i0 -> (\i0 -> mkPairData (i3 i1) (i3 (i4 i1))) (i6 (unConstrData i1)))) (force headList)) (force tailList)) (force (force fstPair))) (force mkCons)) (force (force sndPair))))
removing the data wrapper.working.[String] == [String] (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay [  ]) (delay (i4 (unBData (force headList i1)) (i2 (force tailList i1)))))) (unListData i1)) (listData (i1 (bData #666f6f) ((\i0 -> i2 i1 [  ]) (bData #626172))))) (force mkCons)))
removing the data wrapper.partial checks.check whole structure (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> listData (i2 (\i0 -> listData (i3 (\i0 -> listData (i4 (\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 3) (delay i1) (delay error))) (unListData i1))) (unListData i1))) (unListData i1))) (listData (i6 (listData (i6 (listData (i7 (iData 1) (i7 (iData 2) (i7 (iData 3) (i7 (iData 4) (i7 (iData 5) (i7 (iData 6) (i7 (iData 7) (i7 (iData 8) (i7 (iData 9) (i7 (iData 10) (i7 (iData 11) (i7 (iData 12) (i7 (iData 13) (i7 (iData 14) (i7 (iData 15) (i7 (iData 16) (i7 (iData 17) (i7 (iData 18) (i7 (iData 19) (i7 (iData 20) (i7 (iData 21) (i7 (iData 22) (i7 (iData 23) (i7 (iData 24) (i7 (iData 25) (i7 (iData 26) (i7 (iData 27) (i7 (iData 28) (i7 (iData 29) (i7 (iData 30) (i7 (iData 31) (i7 (iData 32) (i7 (iData 33) (i7 (iData 34) (i7 (iData 35) (i7 (iData 36) (i7 (iData 37) (i7 (iData 38) (i7 (iData 39) (i7 (iData 40) (i7 (iData 41) (i7 (iData 42) (i7 (iData 43) (i7 (iData 44) (i7 (iData 45) (i7 (iData 46) (i7 (iData 47) (i7 (iData 48) (i7 (iData 49) (i7 (iData 50) (i7 (iData 51) (i7 (iData 52) (i7 (iData 53) (i7 (iData 54) (i7 (iData 55) (i7 (iData 56) (i7 (iData 57) (i7 (iData 58) (i7 (iData 59) (i7 (iData 60) (i7 (iData 61) (i7 (iData 62) (i7 (iData 63) (i7 (iData 64) (i7 (iData 65) (i7 (iData 66) (i7 (iData 67) (i7 (iData 68) (i7 (iData 69) (i7 (iData 70) (i7 (iData 71) (i7 (iData 72) (i7 (iData 73) (i7 (iData 74) (i7 (iData 75) (i7 (iData 76) (i7 (iData 77) (i7 (iData 78) (i7 (iData 79) (i7 (iData 80) (i7 (iData 81) (i7 (iData 82) (i7 (iData 83) (i7 (iData 84) (i7 (iData 85) (i7 (iData 86) (i7 (iData 87) (i7 (iData 88) (i7 (iData 89) (i7 (iData 90) (i7 (iData 91) (i7 (iData 92) (i7 (iData 93) (i7 (iData 94) (i7 (iData 95) (i7 (iData 96) (i7 (iData 97) (i7 (iData 98) (i7 (iData 99) (i7 (iData 100) i8)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay i10) (delay (i9 (i3 (i6 i1)) (i2 (i7 i1)))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force headList)) (force tailList)) (\i0 -> i2 i1 i3)) (force mkCons)) [  ]))
removing the data wrapper.partial checks.check structure partly (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> listData ((\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i7) (delay (i6 (i3 (force headList i1)) (i2 (force tailList i1))))))) (\i0 -> force (force ifThenElse (equalsInteger (force chooseData i1 0 1 2 3 4) 2) (delay i1) (delay error))) (unListData i1))) (listData (i1 (listData (i1 (listData (i2 (iData 1) (i2 (iData 2) (i2 (iData 3) (i2 (iData 4) (i2 (iData 5) (i2 (iData 6) (i2 (iData 7) (i2 (iData 8) (i2 (iData 9) (i2 (iData 10) (i2 (iData 11) (i2 (iData 12) (i2 (iData 13) (i2 (iData 14) (i2 (iData 15) (i2 (iData 16) (i2 (iData 17) (i2 (iData 18) (i2 (iData 19) (i2 (iData 20) (i2 (iData 21) (i2 (iData 22) (i2 (iData 23) (i2 (iData 24) (i2 (iData 25) (i2 (iData 26) (i2 (iData 27) (i2 (iData 28) (i2 (iData 29) (i2 (iData 30) (i2 (iData 31) (i2 (iData 32) (i2 (iData 33) (i2 (iData 34) (i2 (iData 35) (i2 (iData 36) (i2 (iData 37) (i2 (iData 38) (i2 (iData 39) (i2 (iData 40) (i2 (iData 41) (i2 (iData 42) (i2 (iData 43) (i2 (iData 44) (i2 (iData 45) (i2 (iData 46) (i2 (iData 47) (i2 (iData 48) (i2 (iData 49) (i2 (iData 50) (i2 (iData 51) (i2 (iData 52) (i2 (iData 53) (i2 (iData 54) (i2 (iData 55) (i2 (iData 56) (i2 (iData 57) (i2 (iData 58) (i2 (iData 59) (i2 (iData 60) (i2 (iData 61) (i2 (iData 62) (i2 (iData 63) (i2 (iData 64) (i2 (iData 65) (i2 (iData 66) (i2 (iData 67) (i2 (iData 68) (i2 (iData 69) (i2 (iData 70) (i2 (iData 71) (i2 (iData 72) (i2 (iData 73) (i2 (iData 74) (i2 (iData 75) (i2 (iData 76) (i2 (iData 77) (i2 (iData 78) (i2 (iData 79) (i2 (iData 80) (i2 (iData 81) (i2 (iData 82) (i2 (iData 83) (i2 (iData 84) (i2 (iData 85) (i2 (iData 86) (i2 (iData 87) (i2 (iData 88) (i2 (iData 89) (i2 (iData 90) (i2 (iData 91) (i2 (iData 92) (i2 (iData 93) (i2 (iData 94) (i2 (iData 95) (i2 (iData 96) (i2 (iData 97) (i2 (iData 98) (i2 (iData 99) (i2 (iData 100) i3)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (\i0 -> i2 i1 i3)) (force mkCons)) [  ]))
example.concatenate two lists (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i14 (equalsData ((\i0 -> force (i15 (force nullList (i14 i1)) (delay (i13 i1)) (delay (force (i17 "not a single output" (delay error)))))) (i10 (\i0 -> \i0 -> force (i13 i1 (delay i20) (delay ((\i0 -> force (i19 "iteration" (delay (force (i17 (equalsByteString (unBData (i15 i1)) ((\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i21 (equalsInteger 1 i2) (delay (i17 (\i0 -> \i0 -> \i0 -> force (i21 i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (i24 (i2 (i22 i1)) (delay (\i0 -> \i0 -> i2 (i24 i3))) (delay (i3 i2 (i23 i1)))))))) (\i0 -> equalsData ((\i0 -> i21 (i15 i1)) (i20 i2)) ((\i0 -> i21 (i15 i1)) (i20 (i14 i1)))) ((\i0 -> unListData (i20 (i14 i1))) (i19 i4)))) (delay (force (i23 "Pattern match failure in 'do' block at src/Plutarch/VerifySpec.hs:249:5-22" (delay error)))))) (i13 i2)) (i9 i1)) (unConstrData (i16 (i17 i1)))) (i9 i4) (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i21 (equalsInteger 0 i2) (delay (unBData (i19 i1))) (delay (force (i23 "Pattern match failure in 'do' block at src/Plutarch/VerifySpec.hs:203:11-26" (delay error)))))) (i13 i2)) (i9 i1)) (unConstrData ((\i0 -> i17 (i10 (i11 i1))) (i16 (i17 (i10 i1)))))) (delay (force (i19 "Pattern match failure in 'do' block at src/Plutarch/VerifySpec.hs:200:11-24" (delay error)))))) (delay (force (i19 "appended something" (delay i20)) (i15 (i16 i1)) (i3 (i16 i2)))) (delay (force (i19 "called without appending" (delay i3)) (i16 i2)))))))) (i8 (i14 i1)))))) ((\i0 -> unListData (i13 ((\i0 -> i15 (i15 (i15 (i15 (i15 (i15 (i7 i1))))))) (i7 i1)))) (i12 (i6 i1))))) (listData ((\i0 -> \i0 -> i12 (\i0 -> \i0 -> force (i15 i1 (delay i3) (delay (i21 (i16 i1) (i2 (i17 i1)))))) i2) (unListData (i8 i3)) (unListData (i8 i2))))) (delay ()) (delay (force (i16 "not valid" (delay error)))))) (listData (i14 (iData 1) (i14 (iData 2) (i14 (iData 3) (i14 (iData 4) (i14 (iData 5) i15)))))) (listData (i14 (iData 6) (i14 (iData 7) (i14 (iData 8) (i14 (iData 9) (i14 (iData 10) i15)))))) #d8799fd8799f9fd8799fd8799fd8799f41a0ff00ffd8799fd8799fd87a9f41a1ffd87a80ffa0d8799f41d0ffffffff80a0a141c0a149736f6d65746f6b656e018080d8799fd8799fd87980d87a80ffd8799fd87b80d87a80ffff9f45ab01fe235c4312301443abcdefff9fd8799f41d09f0102030405060708090affffffd8799f41b0ffffd87a9fd8799fd8799f41a0ff00ffffff) (force (force fstPair))) (\i0 -> i9 (i9 i1))) (\i0 -> i2 (unConstrData i1))) (force (force sndPair))) (\i0 -> listData (i2 (\i0 -> iData ((\i0 -> force (i9 (lessThanInteger i1 0) (delay (force (i11 i10 (delay error)))) (delay i1))) (unIData i1))) (unListData i1)))) (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay i12) (delay (i11 (i3 (i6 i1)) (i2 (i7 i1)))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force headList)) (force tailList)) (force ifThenElse)) "could not make natural") (force trace)) (force mkCons)) [  ]))