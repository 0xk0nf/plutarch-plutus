mergeSort.xs1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i6 i1 (\i0 -> \i0 -> \i0 -> i1 (i18 i7 i3) (i18 i5 i2))) (delay (\i0 -> i1 (i13 i3) (\i0 -> \i0 -> force i1)))) (delay (\i0 -> i1 (\i0 -> \i0 -> force i1) (\i0 -> \i0 -> force i1)))) i5 (\i0 -> \i0 -> i9 (\i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (force ifThenElse (lessThanEqualsInteger i4 i2) (delay (i18 i4 (i7 i3 i5))) (delay (i18 i2 (i7 i6 i1))))) (delay i4)) (delay i1)) (i8 i2) (i8 i1))) (delay (i6 i2))) (delay (\i0 -> \i0 -> force i1))) (i3 1 (i3 2 (i3 3 (i3 4 (i3 5 (i3 6 (i3 7 (i3 8 (i3 9 (i3 10 (\i0 -> \i0 -> force i1)))))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> i2 i1 (\i0 -> \i0 -> force i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3)))
mergeSort.xs2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i6 i1 (\i0 -> \i0 -> \i0 -> i1 (i18 i7 i3) (i18 i5 i2))) (delay (\i0 -> i1 (i13 i3) (\i0 -> \i0 -> force i1)))) (delay (\i0 -> i1 (\i0 -> \i0 -> force i1) (\i0 -> \i0 -> force i1)))) i5 (\i0 -> \i0 -> i9 (\i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (force ifThenElse (lessThanEqualsInteger i4 i2) (delay (i18 i4 (i7 i3 i5))) (delay (i18 i2 (i7 i6 i1))))) (delay i4)) (delay i1)) (i8 i2) (i8 i1))) (delay (i6 i2))) (delay (\i0 -> \i0 -> force i1))) (i3 10 (i3 9 (i3 8 (i3 7 (i3 6 (i3 5 (i3 4 (i3 3 (i3 2 (i3 1 (\i0 -> \i0 -> force i1)))))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> i2 i1 (\i0 -> \i0 -> force i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3)))
mergeSort.xs3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i7 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i6 i1 (\i0 -> \i0 -> \i0 -> i1 (i18 i7 i3) (i18 i5 i2))) (delay (\i0 -> i1 (i13 i3) (\i0 -> \i0 -> force i1)))) (delay (\i0 -> i1 (\i0 -> \i0 -> force i1) (\i0 -> \i0 -> force i1)))) i5 (\i0 -> \i0 -> i9 (\i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (force ifThenElse (lessThanEqualsInteger i4 i2) (delay (i18 i4 (i7 i3 i5))) (delay (i18 i2 (i7 i6 i1))))) (delay i4)) (delay i1)) (i8 i2) (i8 i1))) (delay (i6 i2))) (delay (\i0 -> \i0 -> force i1))) (i3 1 (i3 2 (i3 3 (i3 4 (i3 5 (i3 6 (i3 7 (i3 8 (i3 9 (i3 10 (i3 20 (i3 19 (i3 18 (i3 17 (i3 16 (i3 15 (i3 14 (i3 13 (i3 12 (i3 11 (\i0 -> \i0 -> force i1)))))))))))))))))))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> i2 i1 (\i0 -> \i0 -> force i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3)))
timSort.xs1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i6 (i14 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i22 (i20 (\i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i24 (lessThanEqualsInteger i4 i2) (delay (i29 i4 (i7 i3 i5))) (delay (i29 i2 (i7 i6 i1))))) (delay i4)) (delay i1)) i4 i2) (i6 i1)) (delay (i19 i2))) (delay (\i0 -> \i0 -> force i1))) i5)) (delay i2)) (delay (\i0 -> \i0 -> force i1))) (i8 (\i0 -> \i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i13 (force ((\i0 -> \i0 -> i15 i2 (delay True) i1) (force (i10 i7 (delay (lessThanEqualsInteger i4 i2)))) (delay (force (i10 (i12 i7) (delay (lessThanEqualsInteger i2 i4))))))) (delay (i8 i7 (i18 i2 i6) i1)) (delay (i18 (force (i13 i7 (delay (i14 i6)) (delay i6))) (i8 (i12 i7) (i17 i2) i1))))) (delay (force (i11 i5 (delay (i15 (i12 i4))) (delay (i15 i4)))))) (delay (i1 (\i0 -> \i0 -> i6 i5 (i15 i2) i1) (delay (\i0 -> \i0 -> force i1))))) True (\i0 -> \i0 -> force i1) i1)) (i9 1 (i9 2 (i9 3 (i9 4 (i9 5 (i9 6 (i9 7 (i9 8 (i9 9 (i9 10 (\i0 -> \i0 -> force i1)))))))))))) (\i0 -> \i0 -> i5 i2 i1 i3)) (delay False)) (\i0 -> force (i2 i1 (delay False) (delay True)))) (force ifThenElse)) (\i0 -> i2 (\i0 -> \i0 -> i7 i1 i2) (\i0 -> \i0 -> force i1) i1)) (\i0 -> i2 (\i0 -> \i0 -> \i0 -> i1 (\i0 -> \i0 -> i5 (i6 i4 i2) i1) (delay i2)))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> i2 i1 (\i0 -> \i0 -> force i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3)))
timSort.xs2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i6 (i14 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i22 (i20 (\i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i24 (lessThanEqualsInteger i4 i2) (delay (i29 i4 (i7 i3 i5))) (delay (i29 i2 (i7 i6 i1))))) (delay i4)) (delay i1)) i4 i2) (i6 i1)) (delay (i19 i2))) (delay (\i0 -> \i0 -> force i1))) i5)) (delay i2)) (delay (\i0 -> \i0 -> force i1))) (i8 (\i0 -> \i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i13 (force ((\i0 -> \i0 -> i15 i2 (delay True) i1) (force (i10 i7 (delay (lessThanEqualsInteger i4 i2)))) (delay (force (i10 (i12 i7) (delay (lessThanEqualsInteger i2 i4))))))) (delay (i8 i7 (i18 i2 i6) i1)) (delay (i18 (force (i13 i7 (delay (i14 i6)) (delay i6))) (i8 (i12 i7) (i17 i2) i1))))) (delay (force (i11 i5 (delay (i15 (i12 i4))) (delay (i15 i4)))))) (delay (i1 (\i0 -> \i0 -> i6 i5 (i15 i2) i1) (delay (\i0 -> \i0 -> force i1))))) True (\i0 -> \i0 -> force i1) i1)) (i9 10 (i9 9 (i9 8 (i9 7 (i9 6 (i9 5 (i9 4 (i9 3 (i9 2 (i9 1 (\i0 -> \i0 -> force i1)))))))))))) (\i0 -> \i0 -> i5 i2 i1 i3)) (delay False)) (\i0 -> force (i2 i1 (delay False) (delay True)))) (force ifThenElse)) (\i0 -> i2 (\i0 -> \i0 -> i7 i1 i2) (\i0 -> \i0 -> force i1) i1)) (\i0 -> i2 (\i0 -> \i0 -> \i0 -> i1 (\i0 -> \i0 -> i5 (i6 i4 i2) i1) (delay i2)))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> i2 i1 (\i0 -> \i0 -> force i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3)))
timSort.xs3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i8 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i6 (i14 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i1 (\i0 -> \i0 -> i22 (i20 (\i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i24 (lessThanEqualsInteger i4 i2) (delay (i29 i4 (i7 i3 i5))) (delay (i29 i2 (i7 i6 i1))))) (delay i4)) (delay i1)) i4 i2) (i6 i1)) (delay (i19 i2))) (delay (\i0 -> \i0 -> force i1))) i5)) (delay i2)) (delay (\i0 -> \i0 -> force i1))) (i8 (\i0 -> \i0 -> \i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i13 (force ((\i0 -> \i0 -> i15 i2 (delay True) i1) (force (i10 i7 (delay (lessThanEqualsInteger i4 i2)))) (delay (force (i10 (i12 i7) (delay (lessThanEqualsInteger i2 i4))))))) (delay (i8 i7 (i18 i2 i6) i1)) (delay (i18 (force (i13 i7 (delay (i14 i6)) (delay i6))) (i8 (i12 i7) (i17 i2) i1))))) (delay (force (i11 i5 (delay (i15 (i12 i4))) (delay (i15 i4)))))) (delay (i1 (\i0 -> \i0 -> i6 i5 (i15 i2) i1) (delay (\i0 -> \i0 -> force i1))))) True (\i0 -> \i0 -> force i1) i1)) (i9 1 (i9 2 (i9 3 (i9 4 (i9 5 (i9 6 (i9 7 (i9 8 (i9 9 (i9 10 (i9 20 (i9 19 (i9 18 (i9 17 (i9 16 (i9 15 (i9 14 (i9 13 (i9 12 (i9 11 (\i0 -> \i0 -> force i1)))))))))))))))))))))) (\i0 -> \i0 -> i5 i2 i1 i3)) (delay False)) (\i0 -> force (i2 i1 (delay False) (delay True)))) (force ifThenElse)) (\i0 -> i2 (\i0 -> \i0 -> i7 i1 i2) (\i0 -> \i0 -> force i1) i1)) (\i0 -> i2 (\i0 -> \i0 -> \i0 -> i1 (\i0 -> \i0 -> i5 (i6 i4 i2) i1) (delay i2)))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (\i0 -> i2 i1 (\i0 -> \i0 -> force i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i2 i4 i3)))