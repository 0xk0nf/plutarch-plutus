ptrace.one (program 1.0.0 (force (force trace "foo" (delay ()))))
ptrace.two (program 1.0.0 ((\i0 -> force (i1 "foo" (delay (force (i1 "bar" (delay ())))))) (force trace)))
ptraceIfTrue.true (program 1.0.0 ((\i0 -> force (force ifThenElse i1 (delay (force trace "foo" i1)) (delay i1))) True))
ptraceIfTrue.false (program 1.0.0 ((\i0 -> force (force ifThenElse i1 (delay (force trace "foo" i1)) (delay i1))) False))
ptraceIfFalse.true (program 1.0.0 ((\i0 -> force (force ifThenElse i1 (delay i1) (delay (force trace "foo" i1)))) True))
ptraceIfFalse.false (program 1.0.0 ((\i0 -> force (force ifThenElse i1 (delay i1) (delay (force trace "foo" i1)))) False))
chained.false.true.false (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> force (i2 i1 (delay i1) (delay (i3 "foo" i1)))) ((\i0 -> force (i2 i1 (delay (i3 "bar" i1)) (delay i1))) False)) (force ifThenElse)) (force trace)))
chained.ptrace.true.false (program 1.0.0 ((\i0 -> force (i1 "foo" (delay ((\i0 -> force (force ifThenElse i1 (delay (i2 "bar" i1)) (delay i1))) False)))) (force trace)))
chained.ptrace.true.true (program 1.0.0 ((\i0 -> force (i1 "foo" (delay ((\i0 -> force (force ifThenElse i1 (delay (i2 "bar" i1)) (delay i1))) True)))) (force trace)))