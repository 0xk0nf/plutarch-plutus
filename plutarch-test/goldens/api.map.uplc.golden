lookup.itself (program 1.0.0 ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i7 i1)) i4) (delay (i5 (i7 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (unIData (force (force sndPair) i1))) (bData i1)) (force headList)))
lookup.hit (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (unIData (force (force sndPair) i1))) (bData i2) ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (force headList)) #6b6579))
lookup.miss (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i7 i1)) i4) (delay (i5 (i7 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (unIData (force (force sndPair) i1))) (bData i1)) #6e6f6b6579 ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42)) (force headList)))
lookupData.hit (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (force (force sndPair) i1)) (bData i2) ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (force headList)) #6b6579))
lookupData.miss (program 1.0.0 ((\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> \i0 -> force i1)) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i6 i1)) i4) (delay (i5 (i6 i1))) (delay (i2 (force tailList i1)))))))) i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (force (force sndPair) i1)) (bData #6e6f6b6579) ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42)) (force headList)))
findWithDefault.itself (program 1.0.0 ((\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i5) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i9 i1)) i6) (delay (i4 (force (force sndPair) (i9 i1)))) (delay (i2 (force tailList i1)))))))) i1) (bData i1) i2 unIData) (force headList)))
findWithDefault.hit (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i5) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i9 i1)) i6) (delay (i4 (force (force sndPair) (i9 i1)))) (delay (i2 (force tailList i1)))))))) i1) (bData i1) i2 unIData) 12 i2 ((\i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i3) (iData i1)) 42)) (force headList)) #6b6579))
findWithDefault.hit2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i11 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i13 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1) (bData i1) i2 unIData) 12 i13 ((\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i9 i2 (delay (i7 (i3 (iData 0)) i1)) (delay (i8 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i14 i1 (delay (force (i4 (delay (i12 (\i0 -> i9 i1 (iData 0)) (i22 i3 i2))) (delay (i12 (\i0 -> i9 (iData 0) i1) (i22 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i18 (equalsData i2 i1) (delay (i25 (mkPairData i2 (force (i7 (delay (i11 (i19 i6) (i19 i3))) (delay (i11 (i19 i3) (i19 i6)))))) (force (i7 (delay ((\i0 -> force (i18 i6 (delay (i16 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i22 i6) (i23 i6) i1)))) (i22 i4))) (delay ((\i0 -> \i0 -> force (i19 i2 (delay (i17 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i22 i4) i5)))))) (delay (force (i18 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i25 (mkPairData i2 (i11 (i19 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i22 i4) i5))) (delay (i25 (mkPairData i2 (i11 (iData 0) (i19 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i22 i4) i5)))))) (delay (force (i7 (delay (i25 (mkPairData i1 (i11 (iData 0) (i19 i3))) (i8 i7 i6 i5 (i22 i4)))) (delay (i25 (mkPairData i1 (i11 (i19 i3) (iData 0))) (i8 i7 i6 i5 (i22 i4)))))))))))) (i19 i2)) (i18 i4)) (i18 i1))))) (\i0 -> \i0 -> i2) (i13 i2) (i14 i2) i1)))) (\i0 -> \i0 -> iData (i5 (unIData i2) (unIData i1))) i2 i1) (\i0 -> \i0 -> i1) (i9 #6b6579 42) (i9 i13 6))) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6e65776b6579))
findWithDefault.miss (program 1.0.0 ((\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i5) (delay (force (force ifThenElse (equalsData (force (force fstPair) (i9 i1)) i6) (delay (i4 (force (force sndPair) (i9 i1)))) (delay (i2 (force tailList i1)))))))) i1) (bData i1) i2 unIData) 12 #6e6f6b6579 ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42)) (force headList)))
singleton (program 1.0.0 ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData i2) (iData i1)) #6b6579 42))
singletonData (program 1.0.0 ((\i0 -> \i0 -> force mkCons (mkPairData i2 i1) [  ]) (bData #6b6579) (iData 42)))
insert.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i13))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i14 (i13 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i13 (i12 i3) (i11 i3)))))))))) (unBData (force (force fstPair) (i10 i1))))))) i1 (\i0 -> i1)) (\i0 -> i7 (mkPairData (bData i3) (iData i2)) i1) i2) #6b6579 42 i5) (force ifThenElse)) (force tailList)) (force headList)) (force mkCons)) [  ]))
insert.replace (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i12))) (delay ((\i0 -> \i0 -> force (i9 (lessThanByteString i2 i6) (delay (i4 (i10 i3) (\i0 -> i2 (i13 (i12 i4) i1)))) (delay (force (i9 (equalsByteString i2 i6) (delay (i1 (i7 (i10 i3)))) (delay (i1 (i7 (i12 (i11 i3) (i10 i3)))))))))) (unBData (force (force fstPair) (i9 i1))))))) i1 (\i0 -> i1)) (\i0 -> i6 (mkPairData (bData i8) (iData i2)) i1) i7) 84 ((\i0 -> (\i0 -> \i0 -> i7 (mkPairData i2 i1) i8) (bData i7) (iData i1)) 42)) (force ifThenElse)) (force tailList)) (force headList)) (force mkCons)) [  ]) #6b6579))
delete.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i11))) (delay ((\i0 -> \i0 -> force (i8 (lessThanByteString i2 i6) (delay (i4 (i10 i3) (\i0 -> i2 (i10 (i12 i4) i1)))) (delay (force (i8 (equalsByteString i2 i6) (delay (i1 (i7 (i10 i3)))) (delay (i1 (i7 (i9 (i11 i3) (i10 i3)))))))))) (unBData (force (force fstPair) (i9 i1))))))) i1 (\i0 -> i1)) (\i0 -> i1) #6b6579 i5) (force ifThenElse)) (force mkCons)) (force tailList)) (force headList)) [  ]))
delete.only (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i11))) (delay ((\i0 -> \i0 -> force (i8 (lessThanByteString i2 i6) (delay (i4 (i9 i3) (\i0 -> i2 (i12 (i11 i4) i1)))) (delay (force (i8 (equalsByteString i2 i6) (delay (i1 (i7 (i9 i3)))) (delay (i1 (i7 (i11 (i10 i3) (i9 i3)))))))))) (unBData (force (force fstPair) (i8 i1))))))) i1 (\i0 -> i1)) (\i0 -> i1) i6 ((\i0 -> (\i0 -> \i0 -> i7 (mkPairData i2 i1) i8) (bData i7) (iData i1)) 42)) (force ifThenElse)) (force tailList)) (force headList)) (force mkCons)) [  ]) #6b6579))
delete.miss (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> force (force (force chooseList) i1 (delay (\i0 -> i1 (i6 i11))) (delay ((\i0 -> \i0 -> force (i8 (lessThanByteString i2 i6) (delay (i4 (i9 i3) (\i0 -> i2 (i12 (i11 i4) i1)))) (delay (force (i8 (equalsByteString i2 i6) (delay (i1 (i7 (i9 i3)))) (delay (i1 (i7 (i11 (i10 i3) (i9 i3)))))))))) (unBData (force (force fstPair) (i8 i1))))))) i1 (\i0 -> i1)) (\i0 -> i1) #6e6f6b6579 ((\i0 -> \i0 -> (\i0 -> \i0 -> i8 (mkPairData i2 i1) i9) (bData i2) (iData i1)) #6b6579 42)) (force ifThenElse)) (force tailList)) (force headList)) (force mkCons)) [  ]))
delete.new (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> i1) i8 ((\i0 -> i2 (\i0 -> i11 (mkPairData (bData i10) (iData i2)) i1) i9) 6 ((\i0 -> \i0 -> (\i0 -> \i0 -> i13 (mkPairData i2 i1) i14) (bData i2) (iData i1)) #6b6579 42))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i16 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i15 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) #6e65776b6579) (force mkCons)) [  ]))
delete.old (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> i1) i10 ((\i0 -> \i0 -> i3 (\i0 -> i11 (mkPairData (bData i3) (iData i2)) i1) i2) #6e65776b6579 6 ((\i0 -> (\i0 -> \i0 -> i11 (mkPairData i2 i1) i12) (bData i11) (iData i1)) 42))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i14))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i15 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i14 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) (force mkCons)) [  ]) #6b6579))
difference.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay i10) (delay ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> i10 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (force ifThenElse (equalsData (i14 (i15 i1)) i6) (delay (i4 (force (force sndPair) (i15 i1)))) (delay (i2 (i16 i1)))))))) i1) (bData i1)) (unBData (i7 (i8 i2))) (i10 (i8 i2) i1) (\i0 -> i2) i4) (i2 (i8 i1)))))) i8) ((\i0 -> \i0 -> (\i0 -> \i0 -> i10 (mkPairData i2 i1) i11) (bData i2) (iData i1)) #6b6579 42)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
difference.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i11) (delay ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> i11 (\i0 -> \i0 -> force (i14 i1 (delay i5) (delay (force (force ifThenElse (equalsData (i15 (i16 i1)) i6) (delay (i4 (force (force sndPair) (i16 i1)))) (delay (i2 (i17 i1)))))))) i1) (bData i1)) (unBData (i8 (i9 i2))) (i11 (i9 i2) i1) (\i0 -> i2) i4) (i2 (i9 i1)))))) i2) ((\i0 -> \i0 -> (\i0 -> \i0 -> i10 (mkPairData i2 i1) i11) (bData i2) (iData i1)) #6b6579 42) i7) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
difference.emptyResult (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i13) (delay ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> i11 (\i0 -> \i0 -> force (i14 i1 (delay i5) (delay (force (force ifThenElse (equalsData (i15 (i16 i1)) i6) (delay (i4 (force (force sndPair) (i16 i1)))) (delay (i2 (i17 i1)))))))) i1) (bData i1)) (unBData (i8 (i9 i2))) (i13 (i9 i2) i1) (\i0 -> i2) i4) (i2 (i9 i1)))))) i2) (i6 i10 42) (i6 i10 84)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
zipWith.(-) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i11 i2 (delay (i6 (i3 (iData 1)) i1)) (delay (i10 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i16 i1 (delay (force (i4 (delay (i11 (\i0 -> i9 i1 (iData 0)) (i21 i3 i2))) (delay (i11 (\i0 -> i9 (iData 1) i1) (i21 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i20 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i15 i6) (i15 i3))) (delay (i11 (i15 i3) (i15 i6)))))) (force (i7 (delay ((\i0 -> force (i20 i6 (delay (i15 (i12 (iData 1)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i24 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i21 i2 (delay (i16 (i13 (iData 1)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i25 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i20 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i24 (mkPairData i2 (i11 (i15 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5))) (delay (i24 (mkPairData i2 (i11 (iData 1) (i15 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5)))))) (delay (force (i7 (delay (i24 (mkPairData i1 (i11 (iData 1) (i15 i3))) (i8 i7 i6 i5 (i21 i4)))) (delay (i24 (mkPairData i1 (i11 (i15 i3) (iData 0))) (i8 i7 i6 i5 (i21 i4)))))))))))) (i21 i2)) (i20 i4)) (i20 i1))))) (\i0 -> \i0 -> i2) (i15 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (subtractInteger (unIData i2) (unIData i1))) i2 i1) (i3 i12 23 (i3 #61 42 i13)) (i3 #63 8 (i3 i12 10 i13))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i16) (delay (i14 (mkPairData (i12 (i13 i1)) (i4 (i5 (i13 i1)))) (i2 (i11 i1)))))) i1)) (force (force sndPair))) (\i0 -> \i0 -> i3 (\i0 -> i11 (mkPairData (bData i3) (iData i2)) i1) i2)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i15 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i14 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) (force mkCons)) #62) [  ]))
zipWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i12 i2 (delay (i7 (i3 (iData 0)) i1)) (delay (i11 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i17 i1 (delay (force (i4 (delay (i12 (\i0 -> i9 i1 (iData 0)) (i22 i3 i2))) (delay (i12 (\i0 -> i9 (iData 0) i1) (i22 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i21 (equalsData i2 i1) (delay (i25 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i21 i6 (delay (i16 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i25 i6) (i23 i6) i1)))) (i22 i4))) (delay ((\i0 -> \i0 -> force (i22 i2 (delay (i17 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i24 i2) i1)))) (i22 i4) i5)))))) (delay (force (i21 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i25 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i22 i4) i5))) (delay (i25 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i22 i4) i5)))))) (delay (force (i7 (delay (i25 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i22 i4)))) (delay (i25 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i22 i4)))))))))))) (i22 i2)) (i21 i4)) (i21 i1))))) (\i0 -> \i0 -> i2) (i16 i2) (i14 i2) i1)))) (\i0 -> \i0 -> iData (i5 (unIData i2) (unIData i1))) i2 i1) (\i0 -> \i0 -> i2) (i3 i12 6 (i3 #61 42 i13)) (i3 #63 23 (i3 i12 7 i13))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i16) (delay (i14 (mkPairData (i12 (i13 i1)) (i4 (i5 (i13 i1)))) (i2 (i11 i1)))))) i1)) (force (force sndPair))) (\i0 -> \i0 -> i3 (\i0 -> i11 (mkPairData (bData i3) (iData i2)) i1) i2)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i15 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i14 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) (force mkCons)) #62) [  ]))
zipWith.flip const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i12 i2 (delay (i7 (i3 (iData 0)) i1)) (delay (i11 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i17 i1 (delay (force (i4 (delay (i12 (\i0 -> i9 i1 (iData 0)) (i22 i3 i2))) (delay (i12 (\i0 -> i9 (iData 0) i1) (i22 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i21 (equalsData i2 i1) (delay (i25 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i21 i6 (delay (i16 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i25 i6) (i23 i6) i1)))) (i22 i4))) (delay ((\i0 -> \i0 -> force (i22 i2 (delay (i17 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i24 i2) i1)))) (i22 i4) i5)))))) (delay (force (i21 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i25 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i22 i4) i5))) (delay (i25 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i22 i4) i5)))))) (delay (force (i7 (delay (i25 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i22 i4)))) (delay (i25 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i22 i4)))))))))))) (i22 i2)) (i21 i4)) (i21 i1))))) (\i0 -> \i0 -> i2) (i16 i2) (i14 i2) i1)))) (\i0 -> \i0 -> iData (i5 (unIData i2) (unIData i1))) i2 i1) (\i0 -> \i0 -> i1) (i3 i12 6 (i3 #61 42 i13)) (i3 #63 23 (i3 i12 7 i13))) (\i0 -> \i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay i16) (delay (i14 (mkPairData (i12 (i13 i1)) (i4 (i5 (i13 i1)))) (i2 (i11 i1)))))) i1)) (force (force sndPair))) (\i0 -> \i0 -> i3 (\i0 -> i11 (mkPairData (bData i3) (iData i2)) i1) i2)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i15 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i14 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) (force mkCons)) #62) [  ]))
zipWith.double (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay (i6 (i3 (iData 0)) i1)) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i13 i1 (delay (force (i4 (delay (i11 (\i0 -> i9 i1 (iData 0)) (i21 i3 i2))) (delay (i11 (\i0 -> i9 (iData 0) i1) (i21 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i18 i6) (i18 i3))) (delay (i11 (i18 i3) (i18 i6)))))) (force (i7 (delay ((\i0 -> force (i17 i6 (delay (i15 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i18 i2 (delay (i16 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i24 (mkPairData i2 (i11 (i18 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5))) (delay (i24 (mkPairData i2 (i11 (iData 0) (i18 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5)))))) (delay (force (i7 (delay (i24 (mkPairData i1 (i11 (iData 0) (i18 i3))) (i8 i7 i6 i5 (i21 i4)))) (delay (i24 (mkPairData i1 (i11 (i18 i3) (iData 0))) (i8 i7 i6 i5 (i21 i4)))))))))))) (i18 i2)) (i17 i4)) (i17 i1))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) (i9 i13 42) (i9 i13 42)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
zipWith.(+) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay (i6 (i3 (iData 0)) i1)) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i13 i1 (delay (force (i4 (delay (i11 (\i0 -> i9 i1 (iData 0)) (i21 i3 i2))) (delay (i11 (\i0 -> i9 (iData 0) i1) (i21 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i18 i6) (i18 i3))) (delay (i11 (i18 i3) (i18 i6)))))) (force (i7 (delay ((\i0 -> force (i17 i6 (delay (i15 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i18 i2 (delay (i16 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i24 (mkPairData i2 (i11 (i18 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5))) (delay (i24 (mkPairData i2 (i11 (iData 0) (i18 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5)))))) (delay (force (i7 (delay (i24 (mkPairData i1 (i11 (iData 0) (i18 i3))) (i8 i7 i6 i5 (i21 i4)))) (delay (i24 (mkPairData i1 (i11 (i18 i3) (iData 0))) (i8 i7 i6 i5 (i21 i4)))))))))))) (i18 i2)) (i17 i4)) (i17 i1))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) (i9 i13 42) (i9 i13 23)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
zipWith.preservesCombineCommutativity (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay (i6 (i3 (iData 0)) i1)) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i13 i1 (delay (force (i4 (delay (i11 (\i0 -> i9 i1 (iData 0)) (i21 i3 i2))) (delay (i11 (\i0 -> i9 (iData 0) i1) (i21 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i18 i6) (i18 i3))) (delay (i11 (i18 i3) (i18 i6)))))) (force (i7 (delay ((\i0 -> force (i17 i6 (delay (i15 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i18 i2 (delay (i16 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i24 (mkPairData i2 (i11 (i18 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5))) (delay (i24 (mkPairData i2 (i11 (iData 0) (i18 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5)))))) (delay (force (i7 (delay (i24 (mkPairData i1 (i11 (iData 0) (i18 i3))) (i8 i7 i6 i5 (i21 i4)))) (delay (i24 (mkPairData i1 (i11 (i18 i3) (iData 0))) (i8 i7 i6 i5 (i21 i4)))))))))))) (i18 i2)) (i17 i4)) (i17 i1))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) (i9 i13 23) (i9 i13 42)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
zipWithData.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i6 i2 (delay (i4 (i3 (iData 0)) i1)) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i11 i1 (delay (force (i4 (delay (i9 (\i0 -> i9 i1 (iData 0)) (i19 i3 i2))) (delay (i9 (\i0 -> i9 (iData 0) i1) (i19 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i22 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i15 i6 (delay (i13 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i16 i2 (delay (i14 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i22 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5))) (delay (i22 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5)))))) (delay (force (i7 (delay (i22 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i19 i4)))) (delay (i22 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i19 i4)))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> i2) (i9 i13 42) (i9 i13 42)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
zipWithData.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i6 i2 (delay (i4 (i3 (iData 0)) i1)) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i11 i1 (delay (force (i4 (delay (i9 (\i0 -> i9 i1 (iData 0)) (i17 i3 i2))) (delay (i9 (\i0 -> i9 (iData 0) i1) (i17 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i20 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i15 i6 (delay (i13 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i16 i2 (delay (i14 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i20 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5))) (delay (i20 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5)))))) (delay (force (i7 (delay (i20 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i19 i4)))) (delay (i20 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i19 i4)))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i10 ((\i0 -> \i0 -> (\i0 -> \i0 -> i13 (mkPairData i2 i1) i14) (bData i2) (iData i1)) #6b6579 42)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i13) (delay (i12 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
zipWithData.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i6 i2 (delay (i4 (i3 (iData 0)) i1)) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i11 i1 (delay (force (i4 (delay (i9 (\i0 -> i9 i1 (iData 0)) (i17 i3 i2))) (delay (i9 (\i0 -> i9 (iData 0) i1) (i17 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i20 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i15 i6 (delay (i13 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i16 i2 (delay (i14 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i20 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5))) (delay (i20 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5)))))) (delay (force (i7 (delay (i20 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i19 i4)))) (delay (i20 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i19 i4)))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) ((\i0 -> \i0 -> (\i0 -> \i0 -> i13 (mkPairData i2 i1) i14) (bData i2) (iData i1)) #6b6579 42) i10) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i13) (delay (i12 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
zipWithData.distinctKeys (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i6 i2 (delay (i4 (i3 (iData 0)) i1)) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i11 i1 (delay (force (i4 (delay (i9 (\i0 -> i9 i1 (iData 0)) (i19 i3 i2))) (delay (i9 (\i0 -> i9 (iData 0) i1) (i19 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i22 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i15 i6 (delay (i13 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i16 i2 (delay (i14 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i22 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5))) (delay (i22 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5)))))) (delay (force (i7 (delay (i22 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i19 i4)))) (delay (i22 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i19 i4)))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) (i9 #6b6579 42) (i9 #6e65776b6579 6)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
intersectionWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i11 i2 (delay i18) (delay (i10 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i16 i1 (delay (force (i4 (delay i23) (delay i23)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i20 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i15 i6) (i15 i3))) (delay (i11 (i15 i3) (i15 i6)))))) (force (i7 (delay ((\i0 -> force (i20 i6 (delay i27) (delay (i9 (\i0 -> \i0 -> i2) (i24 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i21 i2 (delay i28) (delay (i10 (\i0 -> \i0 -> i2) (i25 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i20 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i21 i4))) (delay (i8 i7 i6 i5 (i21 i4))))))))))) (i21 i2)) (i20 i4)) (i20 i1))))) (\i0 -> \i0 -> i2) (i15 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (i5 (unIData i2) (unIData i1))) i2 i1) (\i0 -> \i0 -> i2) (i2 i11 6 (i2 #61 42 i12)) (i2 #63 23 (i2 i11 7 i12))) (force (force sndPair))) (\i0 -> \i0 -> i3 (\i0 -> i11 (mkPairData (bData i3) (iData i2)) i1) i2)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i15 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i14 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) (force mkCons)) #62) [  ]))
intersectionWith.flip const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i11 i2 (delay i18) (delay (i10 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i16 i1 (delay (force (i4 (delay i23) (delay i23)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i20 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i15 i6) (i15 i3))) (delay (i11 (i15 i3) (i15 i6)))))) (force (i7 (delay ((\i0 -> force (i20 i6 (delay i27) (delay (i9 (\i0 -> \i0 -> i2) (i24 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i21 i2 (delay i28) (delay (i10 (\i0 -> \i0 -> i2) (i25 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i20 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i21 i4))) (delay (i8 i7 i6 i5 (i21 i4))))))))))) (i21 i2)) (i20 i4)) (i20 i1))))) (\i0 -> \i0 -> i2) (i15 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (i5 (unIData i2) (unIData i1))) i2 i1) (\i0 -> \i0 -> i1) (i2 i11 6 (i2 #61 42 i12)) (i2 #63 23 (i2 i11 7 i12))) (force (force sndPair))) (\i0 -> \i0 -> i3 (\i0 -> i11 (mkPairData (bData i3) (iData i2)) i1) i2)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> force (i7 i1 (delay (\i0 -> i1 (i6 i15))) (delay ((\i0 -> \i0 -> force (i10 (lessThanByteString i2 i6) (delay (i4 (i11 i3) (\i0 -> i2 (i15 (i14 i4) i1)))) (delay (force (i10 (equalsByteString i2 i6) (delay (i1 (i7 (i11 i3)))) (delay (i1 (i7 (i14 (i13 i3) (i11 i3)))))))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> i1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force tailList)) (force (force fstPair))) (force headList)) (force mkCons)) #62) [  ]))
intersectionWith.double (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i15) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i12 i1 (delay (force (i4 (delay i20) (delay i20)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i22 (mkPairData i2 (force (i7 (delay (i11 (i14 i6) (i14 i3))) (delay (i11 (i14 i3) (i14 i6)))))) (force (i7 (delay ((\i0 -> force (i16 i6 (delay i24) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i17 i2 (delay i25) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i19 i4))) (delay (i8 i7 i6 i5 (i19 i4))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) (i7 i11 42) (i7 i11 42)) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
intersectionWith.(+) (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i15) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i12 i1 (delay (force (i4 (delay i20) (delay i20)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i22 (mkPairData i2 (force (i7 (delay (i11 (i14 i6) (i14 i3))) (delay (i11 (i14 i3) (i14 i6)))))) (force (i7 (delay ((\i0 -> force (i16 i6 (delay i24) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i17 i2 (delay i25) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i19 i4))) (delay (i8 i7 i6 i5 (i19 i4))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) (i7 i11 42) (i7 i11 23)) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
intersectionWith.preservesCombineCommutativity (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i15) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i12 i1 (delay (force (i4 (delay i20) (delay i20)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i22 (mkPairData i2 (force (i7 (delay (i11 (i14 i6) (i14 i3))) (delay (i11 (i14 i3) (i14 i6)))))) (force (i7 (delay ((\i0 -> force (i16 i6 (delay i24) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i17 i2 (delay i25) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i19 i4))) (delay (i8 i7 i6 i5 (i19 i4))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) (i7 i11 23) (i7 i11 42)) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
intersectionWith.partialKeyMismatch (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i17) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i13 i1 (delay (force (i4 (delay i22) (delay i22)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i24 (mkPairData i2 (force (i7 (delay (i11 (i18 i6) (i18 i3))) (delay (i11 (i18 i3) (i18 i6)))))) (force (i7 (delay ((\i0 -> force (i17 i6 (delay i26) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4))) (delay ((\i0 -> \i0 -> force (i18 i2 (delay i27) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5)))))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i21 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i21 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i21 i4))) (delay (i8 i7 i6 i5 (i21 i4))))))))))) (i18 i2)) (i17 i4)) (i17 i1))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> iData (addInteger (unIData i2) (unIData i1))) i2 i1) ((\i0 -> \i0 -> \i0 -> force (i6 i2 (delay (i4 (i3 (iData 0)) i1)) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i11 i1 (delay (force (i4 (delay (i9 (\i0 -> i9 i1 (iData 0)) (i19 i3 i2))) (delay (i9 (\i0 -> i9 (iData 0) i1) (i19 i3 i2)))))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i22 (mkPairData i2 (force (i7 (delay (i11 (i16 i6) (i16 i3))) (delay (i11 (i16 i3) (i16 i6)))))) (force (i7 (delay ((\i0 -> force (i15 i6 (delay (i13 (i12 (iData 0)) i1)) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4))) (delay ((\i0 -> \i0 -> force (i16 i2 (delay (i14 (i13 (iData 0)) i1)) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5)))))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i22 (mkPairData i2 (i11 (i16 i6) (iData 0))) (i8 (\i0 -> \i0 -> i1) i3 (i19 i4) i5))) (delay (i22 (mkPairData i2 (i11 (iData 0) (i16 i6))) (i8 (\i0 -> \i0 -> i2) i3 (i19 i4) i5)))))) (delay (force (i7 (delay (i22 (mkPairData i1 (i11 (iData 0) (i16 i3))) (i8 i7 i6 i5 (i19 i4)))) (delay (i22 (mkPairData i1 (i11 (i16 i3) (iData 0))) (i8 i7 i6 i5 (i19 i4)))))))))))) (i16 i2)) (i15 i4)) (i15 i1))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) (\i0 -> \i0 -> i2) (i9 i13 42) (i9 #6e65776b6579 6)) (i9 i13 23)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i15) (delay (i14 (mkPairData (i9 (i10 i1)) (i4 (i8 (i10 i1)))) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force sndPair))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
intersectionWithData.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i5 i2 (delay i13) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i10 i1 (delay (force (i4 (delay i18) (delay i18)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i20 (mkPairData i2 (force (i7 (delay (i11 (i12 i6) (i12 i3))) (delay (i11 (i12 i3) (i12 i6)))))) (force (i7 (delay ((\i0 -> force (i14 i6 (delay i22) (delay (i9 (\i0 -> \i0 -> i2) (i17 i6) (i18 i6) i1)))) (i17 i4))) (delay ((\i0 -> \i0 -> force (i15 i2 (delay i23) (delay (i10 (\i0 -> \i0 -> i2) (i18 i2) (i19 i2) i1)))) (i17 i4) i5)))))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i17 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i17 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i17 i4))) (delay (i8 i7 i6 i5 (i17 i4))))))))))) (i14 i2)) (i13 i4)) (i13 i1))))) (\i0 -> \i0 -> i2) (i8 i2) (i9 i2) i1)))) (\i0 -> \i0 -> i2) (i7 i11 42) (i7 i11 42)) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #6b6579))
intersectionWithData.emptyLeft (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i5 i2 (delay i11) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i10 i1 (delay (force (i4 (delay i16) (delay i16)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i18 (mkPairData i2 (force (i7 (delay (i11 (i12 i6) (i12 i3))) (delay (i11 (i12 i3) (i12 i6)))))) (force (i7 (delay ((\i0 -> force (i14 i6 (delay i20) (delay (i9 (\i0 -> \i0 -> i2) (i17 i6) (i18 i6) i1)))) (i17 i4))) (delay ((\i0 -> \i0 -> force (i15 i2 (delay i21) (delay (i10 (\i0 -> \i0 -> i2) (i18 i2) (i19 i2) i1)))) (i17 i4) i5)))))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i17 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i17 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i17 i4))) (delay (i8 i7 i6 i5 (i17 i4))))))))))) (i14 i2)) (i13 i4)) (i13 i1))))) (\i0 -> \i0 -> i2) (i8 i2) (i9 i2) i1)))) (\i0 -> \i0 -> i2) i8 ((\i0 -> \i0 -> (\i0 -> \i0 -> i11 (mkPairData i2 i1) i12) (bData i2) (iData i1)) #6b6579 42)) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
intersectionWithData.emptyRight (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i5 i2 (delay i11) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i10 i1 (delay (force (i4 (delay i16) (delay i16)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i18 (mkPairData i2 (force (i7 (delay (i11 (i12 i6) (i12 i3))) (delay (i11 (i12 i3) (i12 i6)))))) (force (i7 (delay ((\i0 -> force (i14 i6 (delay i20) (delay (i9 (\i0 -> \i0 -> i2) (i17 i6) (i18 i6) i1)))) (i17 i4))) (delay ((\i0 -> \i0 -> force (i15 i2 (delay i21) (delay (i10 (\i0 -> \i0 -> i2) (i18 i2) (i19 i2) i1)))) (i17 i4) i5)))))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i17 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i17 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i17 i4))) (delay (i8 i7 i6 i5 (i17 i4))))))))))) (i14 i2)) (i13 i4)) (i13 i1))))) (\i0 -> \i0 -> i2) (i8 i2) (i9 i2) i1)))) (\i0 -> \i0 -> i2) ((\i0 -> \i0 -> (\i0 -> \i0 -> i11 (mkPairData i2 i1) i12) (bData i2) (iData i1)) #6b6579 42) i8) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (force mkCons)) [  ]))
intersectionWithData.keyMismatch (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (i5 i2 (delay i13) (delay ((\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1))) (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i10 i1 (delay (force (i4 (delay i18) (delay i18)))) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i20 (mkPairData i2 (force (i7 (delay (i11 (i12 i6) (i12 i3))) (delay (i11 (i12 i3) (i12 i6)))))) (force (i7 (delay ((\i0 -> force (i14 i6 (delay i22) (delay (i9 (\i0 -> \i0 -> i2) (i17 i6) (i18 i6) i1)))) (i17 i4))) (delay ((\i0 -> \i0 -> force (i15 i2 (delay i23) (delay (i10 (\i0 -> \i0 -> i2) (i18 i2) (i19 i2) i1)))) (i17 i4) i5)))))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (force (i7 (delay (i8 (\i0 -> \i0 -> i1) i3 (i17 i4) i5)) (delay (i8 (\i0 -> \i0 -> i2) i3 (i17 i4) i5))))) (delay (force (i7 (delay (i8 i7 i6 i5 (i17 i4))) (delay (i8 i7 i6 i5 (i17 i4))))))))))) (i14 i2)) (i13 i4)) (i13 i1))))) (\i0 -> \i0 -> i2) (i8 i2) (i9 i2) i1)))) (\i0 -> \i0 -> i2) (i7 #6b6579 42) (i7 #6e65776b6579 6)) (force (force sndPair))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))