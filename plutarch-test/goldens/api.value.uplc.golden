singleton (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i3 (bData i2) (mapData i1)) #c0 ((\i0 -> \i0 -> i3 (bData i2) (iData i1)) #736f6d65746f6b656e 1)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
singletonData (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsData i1 (iData 0)) (delay i6) (delay (i4 i3 (mapData (i4 i2 i1)))))) (bData #c0) (bData #736f6d65746f6b656e) (iData 1)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
valueOf.itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i5) (delay (force (i9 (equalsData (i10 (i12 i1)) i6) (delay (i4 (i11 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)))
valueOf.applied (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) ((\i0 -> i11 (bData i14) (mapData i1)) ((\i0 -> i11 (bData i15) (iData i1)) 1)) i13 i14) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i5) (delay (force (i9 (equalsData (i10 (i12 i1)) i6) (delay (i4 (i11 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c0) #736f6d65746f6b656e))
valueOf.growing.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) ((\i0 -> \i0 -> i12 (bData i2) (mapData i1)) #c0 ((\i0 -> \i0 -> i12 (bData i2) (iData i1)) #736f6d65746f6b656e 1)) #c7 #746f6b656e) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i8 i1 (delay i5) (delay (force (i9 (equalsData (i10 (i12 i1)) i6) (delay (i4 (i11 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
valueOf.growing.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i11 i2 (delay i1) (delay (i8 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i16 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i18 (equalsData i2 i1) (delay (i27 (mkPairData i2 (mapData (i11 (unMapData (i17 i6)) (unMapData (i17 i3))))) ((\i0 -> force (i20 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i22 i6) (i23 i6) i1)))) (i22 i4)))) (delay (force (i18 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i19 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i21 i5) (i22 i5) i4)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i21 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i27 i6 i5) (i22 i4))))))))) (i19 i2)) (i18 i4)) (i18 i1)))))) (delay (force (i16 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i18 (equalsData i2 i1) (delay (i27 (mkPairData i2 (mapData (i11 (unMapData (i17 i3)) (unMapData (i17 i6))))) ((\i0 -> \i0 -> force (i21 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i22 i4) i5))) (delay (force (i18 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i19 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i21 i4) (i22 i4) i5)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i21 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i22 i4) (i27 i6 i5))))))))) (i19 i2)) (i18 i4)) (i18 i1)))))))) (\i0 -> \i0 -> i2) (i13 i2) (i14 i2) i1)))) (\i0 -> \i0 -> force (i10 i2 (delay i1) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (iData (addInteger (unIData (i16 i6)) (unIData (i16 i3))))) ((\i0 -> force (i19 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i26 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (iData (addInteger (unIData (i16 i3)) (unIData (i16 i6))))) ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i26 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) i2 i1) (i10 i11 (i12 #736f6d65746f6b656e 1)) (i10 i11 (i12 i16 1))) #c7 i16) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i5 (\i0 -> \i0 -> force (i10 i1 (delay i5) (delay (force (i9 (equalsData (i11 (i12 i1)) i6) (delay (i4 (i8 (i12 i1)))) (delay (i2 (i13 i1)))))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i19 1))) (i14 #c1 (i15 i19 1))) #c7 i19) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.4 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i19 1))) (i14 #c1 (i15 i19 1))) (i14 #c2 (i15 i19 1))) #c7 i19) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i19 1))) (i14 #c1 (i15 i19 1))) (i14 #c2 (i15 i19 1))) (i14 #c3 (i15 i19 1))) #c7 i19) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.6 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i19 1))) (i14 #c1 (i15 i19 1))) (i14 #c2 (i15 i19 1))) (i14 #c3 (i15 i19 1))) (i14 #c4 (i15 i19 1))) #c7 i19) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.7 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i19 1))) (i14 #c1 (i15 i19 1))) (i14 #c2 (i15 i19 1))) (i14 #c3 (i15 i19 1))) (i14 #c4 (i15 i19 1))) (i14 #c5 (i15 i19 1))) #c7 i19) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.8 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i19 1))) (i14 #c1 (i15 i19 1))) (i14 #c2 (i15 i19 1))) (i14 #c3 (i15 i19 1))) (i14 #c4 (i15 i19 1))) (i14 #c5 (i15 i19 1))) (i14 #c6 (i15 i19 1))) #c7 i19) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
valueOf.growing.9 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.11 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.12 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) (i14 #ca (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.13 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) (i14 #ca (i15 i20 1))) (i14 #cb (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) (i14 #ca (i15 i20 1))) (i14 #cb (i15 i20 1))) (i14 #cc (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.15 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) (i14 #ca (i15 i20 1))) (i14 #cb (i15 i20 1))) (i14 #cc (i15 i20 1))) (i14 #cd (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.16 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) (i14 #ca (i15 i20 1))) (i14 #cb (i15 i20 1))) (i14 #cc (i15 i20 1))) (i14 #cd (i15 i20 1))) (i14 #ce (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
valueOf.growing.17 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> i4 i2 0 (\i0 -> i5 i2 0 unIData (unMapData i1)) i3) (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i3 addInteger (i14 i13 (i15 #736f6d65746f6b656e 1)) (i14 i13 (i15 i20 1))) (i14 #c1 (i15 i20 1))) (i14 #c2 (i15 i20 1))) (i14 #c3 (i15 i20 1))) (i14 #c4 (i15 i20 1))) (i14 #c5 (i15 i20 1))) (i14 #c6 (i15 i20 1))) (i14 i19 (i15 i20 1))) (i14 #c8 (i15 i20 1))) (i14 #c9 (i15 i20 1))) (i14 #ca (i15 i20 1))) (i14 #cb (i15 i20 1))) (i14 #cc (i15 i20 1))) (i14 #cd (i15 i20 1))) (i14 #ce (i15 i20 1))) (i14 #cf (i15 i20 1))) i19 i20) (\i0 -> i2 (bData i1))) (\i0 -> \i0 -> \i0 -> \i0 -> i8 (\i0 -> \i0 -> force (i13 i1 (delay i5) (delay (force (i12 (equalsData (i14 (i15 i1)) i6) (delay (i4 (i11 (i15 i1)))) (delay (i2 (i16 i1)))))))) i1)) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #c7) #746f6b656e))
unionResolvingCollisionsWith.const (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i10 i2 (delay i1) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i16 i6)) (unMapData (i16 i3))))) ((\i0 -> force (i19 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i26 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i16 i3)) (unMapData (i16 i6))))) ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i26 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i13 (unIData (i15 i6)) (unIData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i25 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i13 (unIData (i15 i3)) (unIData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i25 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) i2 i1) (\i0 -> \i0 -> i2) (i8 i9 (i10 i14 1)) (i8 i9 (i10 i14 1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.(+).itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i15 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i18 (mkPairData i2 (mapData (i11 (unMapData (i15 i6)) (unMapData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i18 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i18 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i18 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i14 i1 (delay (i15 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i18 (mkPairData i2 (mapData (i11 (unMapData (i15 i3)) (unMapData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i18 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i18 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i18 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i14 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i17 (mkPairData i2 (iData (addInteger (unIData (i14 i6)) (unIData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i17 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i17 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i17 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i13 i1 (delay (i14 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i17 (mkPairData i2 (iData (addInteger (unIData (i14 i3)) (unIData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i17 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i17 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i17 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) i2 i1) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force mkCons)) (force (force fstPair))) (force headList)) (force tailList)))
unionResolvingCollisionsWith.(+).applied (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i15 i6)) (unMapData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i25 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i15 i3)) (unMapData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i25 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (addInteger (unIData (i14 i6)) (unIData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (addInteger (unIData (i14 i3)) (unIData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) i2 i1) (i8 i9 (i10 i14 1)) (i8 i9 (i10 i14 1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.tokens (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i15 i6)) (unMapData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i25 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i15 i3)) (unMapData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i25 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (addInteger (unIData (i14 i6)) (unIData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (addInteger (unIData (i14 i3)) (unIData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) i2 i1) (i8 i9 (i10 #736f6d65746f6b656e 1)) (i8 i9 (i10 #6f74686572746f6b656e 1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
unionResolvingCollisionsWith.symbols (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i15 i6)) (unMapData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i24 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i15 i3)) (unMapData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i24 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (addInteger (unIData (i14 i6)) (unIData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i23 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (addInteger (unIData (i14 i3)) (unIData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i23 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) i2 i1) (i8 #c0 (i9 i13 1)) (i8 #c7 (i9 i13 1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i10 i2 (delay i1) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i15 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i16 i6)) (unMapData (i16 i3))))) ((\i0 -> force (i19 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i18 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i25 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i15 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i16 i3)) (unMapData (i16 i6))))) ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i18 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i25 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i13 (unIData (i15 i6)) (unIData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i24 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i13 (unIData (i15 i3)) (unIData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i24 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) i2 i1) (\i0 -> \i0 -> i2) (i8 #c0 (i9 i13 1)) (i8 #c7 (i9 i13 1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i12 i11 (i13 i17 1)) (i12 i11 (i13 #746f6b656e 1))) (i12 #c7 (i13 i17 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i24 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i24 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i23 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i23 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i13 i11 (i14 i18 1)) (i13 i11 (i14 i12 1))) (i13 #c1 (i14 i12 1))) (i13 #c7 (i14 i18 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.4 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i14 i18 1)) (i13 i11 (i14 i12 1))) (i13 #c1 (i14 i12 1))) (i13 #c2 (i14 i12 1))) (i13 #c7 (i14 i18 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i14 i18 1)) (i13 i11 (i14 i12 1))) (i13 #c1 (i14 i12 1))) (i13 #c2 (i14 i12 1))) (i13 #c3 (i14 i12 1))) (i13 #c7 (i14 i18 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.6 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i14 i18 1)) (i13 i11 (i14 i12 1))) (i13 #c1 (i14 i12 1))) (i13 #c2 (i14 i12 1))) (i13 #c3 (i14 i12 1))) (i13 #c4 (i14 i12 1))) (i13 #c7 (i14 i18 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.7 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i14 i18 1)) (i13 i11 (i14 i12 1))) (i13 #c1 (i14 i12 1))) (i13 #c2 (i14 i12 1))) (i13 #c3 (i14 i12 1))) (i13 #c4 (i14 i12 1))) (i13 #c5 (i14 i12 1))) (i13 #c7 (i14 i18 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.8 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i14 i18 1)) (i13 i11 (i14 i12 1))) (i13 #c1 (i14 i12 1))) (i13 #c2 (i14 i12 1))) (i13 #c3 (i14 i12 1))) (i13 #c4 (i14 i12 1))) (i13 #c5 (i14 i12 1))) (i13 #c6 (i14 i12 1))) (i13 #c7 (i14 i18 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.9 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.11 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.12 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 #ca (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.13 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 #ca (i15 i12 1))) (i13 #cb (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 #ca (i15 i12 1))) (i13 #cb (i15 i12 1))) (i13 #cc (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.15 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 #ca (i15 i12 1))) (i13 #cb (i15 i12 1))) (i13 #cc (i15 i12 1))) (i13 #cd (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.16 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 #ca (i15 i12 1))) (i13 #cb (i15 i12 1))) (i13 #cc (i15 i12 1))) (i13 #cd (i15 i12 1))) (i13 #ce (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWith.growing.17 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i1 (\i0 -> \i0 -> i2) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i13 i11 (i15 i19 1)) (i13 i11 (i15 i12 1))) (i13 #c1 (i15 i12 1))) (i13 #c2 (i15 i12 1))) (i13 #c3 (i15 i12 1))) (i13 #c4 (i15 i12 1))) (i13 #c5 (i15 i12 1))) (i13 #c6 (i15 i12 1))) (i13 i14 (i15 i12 1))) (i13 #c8 (i15 i12 1))) (i13 #c9 (i15 i12 1))) (i13 #ca (i15 i12 1))) (i13 #cb (i15 i12 1))) (i13 #cc (i15 i12 1))) (i13 #cd (i15 i12 1))) (i13 #ce (i15 i12 1))) (i13 #cf (i15 i12 1))) (i13 i14 (i15 i19 1))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c0) #746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
unionResolvingCollisionsWithData const.itself (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i10 i2 (delay i1) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i15 i1 (delay (i16 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i19 (mkPairData i2 (mapData (i11 (unMapData (i16 i6)) (unMapData (i16 i3))))) ((\i0 -> force (i19 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i22 i6) (i23 i6) i1)))) (i22 i4)))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i19 i6 (force (i18 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i21 i5) (i22 i5) i4)))))) (delay (i19 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i19 i6 i5) (i22 i4))))))))) (i19 i2)) (i18 i4)) (i18 i1)))))) (delay (force (i15 i1 (delay (i16 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i19 (mkPairData i2 (mapData (i11 (unMapData (i16 i3)) (unMapData (i16 i6))))) ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i22 i4) i5))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i19 i6 (force (i18 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i21 i4) (i22 i4) i5)))))) (delay (i19 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i23 i2) (i24 i2) i1)))) (i22 i4) (i19 i6 i5))))))))) (i19 i2)) (i18 i4)) (i18 i1)))))))) (\i0 -> \i0 -> i2) (i13 i2) (i14 i2) i1)))) (\i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i15 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i18 (mkPairData i2 (i13 (i15 i6) (i15 i3))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i18 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i18 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i18 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i14 i1 (delay (i15 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i18 (mkPairData i2 (i13 (i15 i3) (i15 i6))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i18 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i18 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i18 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) i2 i1) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force mkCons)) (force (force fstPair))) (force headList)) (force tailList)))
unionResolvingCollisionsWithData const.applied (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i10 i2 (delay i1) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i16 i6)) (unMapData (i16 i3))))) ((\i0 -> force (i19 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i26 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i16 i3)) (unMapData (i16 i6))))) ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i26 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i13 (i15 i6) (i15 i3))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i25 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (i13 (i15 i3) (i15 i6))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i25 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) i2 i1) (\i0 -> \i0 -> i2) (i8 i9 (i10 i14 1)) (i8 i9 (i10 i14 1))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
inv (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> (\i0 -> i4 (\i0 -> mapData (i2 (unMapData i1)))) (\i0 -> i4 (\i0 -> iData (i4 (unIData i1))) i1) i1) (\i0 -> subtractInteger 0 i1) ((\i0 -> \i0 -> i10 (bData i2) (mapData i1)) #c0 ((\i0 -> \i0 -> i10 (bData i2) (iData i1)) #736f6d65746f6b656e 1))) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i6 i1 (delay i13) (delay (i12 (mkPairData (i7 (i9 i1)) (i4 (i8 (i9 i1)))) (i2 (i10 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force (force fstPair))) (force (force sndPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
equality.itself (program 1.0.0 (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)))
equality.triviallyTrue (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 i2 (i3 i7 1)) (i1 i2 (i3 i7 1))) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
equality.triviallyFalse (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 i2 (i3 #736f6d65746f6b656e 1)) (i1 i2 (i3 #6f74686572746f6b656e 1))) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
equality.swappedTokensTrue (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i12 i13 (i14 i18 1)) (i12 i13 (i14 i11 1))) (i1 addInteger (i12 i13 (i14 i11 1)) (i12 i13 (i14 i18 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #6f74686572746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
equality.swappedSymbolsTrue (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i12 i13 (i14 i18 1)) (i12 i11 (i14 i18 1))) (i1 addInteger (i12 i11 (i14 i18 1)) (i12 i13 (i14 i18 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #c7) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
equality.growing.1 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 i2 (i3 i7 1)) (i1 i2 (i3 i7 1))) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
equality.growing.2 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i12 i13 (i14 i11 1)) (i12 i13 (i14 i18 1))) (i1 addInteger (i12 i13 (i14 i11 1)) (i12 i13 (i14 i18 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i25 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i25 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i25 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i24 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i24 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i24 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.3 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i13 i12 (i15 i11 1)) (i13 i12 (i15 i19 1))) (i13 i14 (i15 i19 1))) (i1 addInteger (i1 addInteger (i13 i12 (i15 i11 1)) (i13 i12 (i15 i19 1))) (i13 i14 (i15 i19 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i26 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i26 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i25 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i25 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c1) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.4 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i14 i12 (i16 i11 1)) (i14 i12 (i16 i20 1))) (i14 i13 (i16 i20 1))) (i14 i15 (i16 i20 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i14 i12 (i16 i11 1)) (i14 i12 (i16 i20 1))) (i14 i13 (i16 i20 1))) (i14 i15 (i16 i20 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i27 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i27 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i27 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i27 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i26 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i26 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i26 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i26 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c2) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.5 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i12 (i17 i11 1)) (i15 i12 (i17 i21 1))) (i15 i13 (i17 i21 1))) (i15 i14 (i17 i21 1))) (i15 i16 (i17 i21 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i15 i12 (i17 i11 1)) (i15 i12 (i17 i21 1))) (i15 i13 (i17 i21 1))) (i15 i14 (i17 i21 1))) (i15 i16 (i17 i21 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i28 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i28 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i28 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i28 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i28 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i28 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i27 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i27 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i27 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i27 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c3) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.6 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i16 i12 (i18 i11 1)) (i16 i12 (i18 i22 1))) (i16 i13 (i18 i22 1))) (i16 i14 (i18 i22 1))) (i16 i15 (i18 i22 1))) (i16 i17 (i18 i22 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i16 i12 (i18 i11 1)) (i16 i12 (i18 i22 1))) (i16 i13 (i18 i22 1))) (i16 i14 (i18 i22 1))) (i16 i15 (i18 i22 1))) (i16 i17 (i18 i22 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i29 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i29 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i29 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i29 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i29 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i29 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i28 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i28 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i28 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i28 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i28 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i28 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c4) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.7 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i17 i12 (i19 i11 1)) (i17 i12 (i19 i23 1))) (i17 i13 (i19 i23 1))) (i17 i14 (i19 i23 1))) (i17 i15 (i19 i23 1))) (i17 i16 (i19 i23 1))) (i17 i18 (i19 i23 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i17 i12 (i19 i11 1)) (i17 i12 (i19 i23 1))) (i17 i13 (i19 i23 1))) (i17 i14 (i19 i23 1))) (i17 i15 (i19 i23 1))) (i17 i16 (i19 i23 1))) (i17 i18 (i19 i23 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i30 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i30 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i30 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i30 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i29 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i29 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i29 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i29 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i29 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i29 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c5) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.8 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i18 i12 (i20 i11 1)) (i18 i12 (i20 i24 1))) (i18 i13 (i20 i24 1))) (i18 i14 (i20 i24 1))) (i18 i15 (i20 i24 1))) (i18 i16 (i20 i24 1))) (i18 i17 (i20 i24 1))) (i18 i19 (i20 i24 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i18 i12 (i20 i11 1)) (i18 i12 (i20 i24 1))) (i18 i13 (i20 i24 1))) (i18 i14 (i20 i24 1))) (i18 i15 (i20 i24 1))) (i18 i16 (i20 i24 1))) (i18 i17 (i20 i24 1))) (i18 i19 (i20 i24 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i31 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i31 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i31 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i31 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i31 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i31 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i30 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i30 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i30 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i30 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c6) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.9 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i19 i12 (i21 i11 1)) (i19 i12 (i21 i25 1))) (i19 i13 (i21 i25 1))) (i19 i14 (i21 i25 1))) (i19 i15 (i21 i25 1))) (i19 i16 (i21 i25 1))) (i19 i17 (i21 i25 1))) (i19 i18 (i21 i25 1))) (i19 i20 (i21 i25 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i19 i12 (i21 i11 1)) (i19 i12 (i21 i25 1))) (i19 i13 (i21 i25 1))) (i19 i14 (i21 i25 1))) (i19 i15 (i21 i25 1))) (i19 i16 (i21 i25 1))) (i19 i17 (i21 i25 1))) (i19 i18 (i21 i25 1))) (i19 i20 (i21 i25 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i29 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i32 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i32 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i32 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i32 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i29 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i32 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i32 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i32 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i32 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i31 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i31 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i31 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i31 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i31 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i31 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c7) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.10 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i20 i12 (i22 i11 1)) (i20 i12 (i22 i26 1))) (i20 i13 (i22 i26 1))) (i20 i14 (i22 i26 1))) (i20 i15 (i22 i26 1))) (i20 i16 (i22 i26 1))) (i20 i17 (i22 i26 1))) (i20 i18 (i22 i26 1))) (i20 i19 (i22 i26 1))) (i20 i21 (i22 i26 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i20 i12 (i22 i11 1)) (i20 i12 (i22 i26 1))) (i20 i13 (i22 i26 1))) (i20 i14 (i22 i26 1))) (i20 i15 (i22 i26 1))) (i20 i16 (i22 i26 1))) (i20 i17 (i22 i26 1))) (i20 i18 (i22 i26 1))) (i20 i19 (i22 i26 1))) (i20 i21 (i22 i26 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i30 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i33 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i33 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i33 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i33 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i30 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i33 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i33 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i33 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i33 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i29 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i32 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i32 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i32 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i32 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i29 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i32 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i32 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i32 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i32 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c8) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.11 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i21 i12 (i23 i11 1)) (i21 i12 (i23 i27 1))) (i21 i13 (i23 i27 1))) (i21 i14 (i23 i27 1))) (i21 i15 (i23 i27 1))) (i21 i16 (i23 i27 1))) (i21 i17 (i23 i27 1))) (i21 i18 (i23 i27 1))) (i21 i19 (i23 i27 1))) (i21 i20 (i23 i27 1))) (i21 i22 (i23 i27 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i21 i12 (i23 i11 1)) (i21 i12 (i23 i27 1))) (i21 i13 (i23 i27 1))) (i21 i14 (i23 i27 1))) (i21 i15 (i23 i27 1))) (i21 i16 (i23 i27 1))) (i21 i17 (i23 i27 1))) (i21 i18 (i23 i27 1))) (i21 i19 (i23 i27 1))) (i21 i20 (i23 i27 1))) (i21 i22 (i23 i27 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i31 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i34 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i34 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i34 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i34 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i31 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i34 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i34 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i34 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i34 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i30 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i33 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i33 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i33 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i33 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i30 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i33 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i33 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i33 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i33 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c9) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.12 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i22 i12 (i24 i11 1)) (i22 i12 (i24 i28 1))) (i22 i13 (i24 i28 1))) (i22 i14 (i24 i28 1))) (i22 i15 (i24 i28 1))) (i22 i16 (i24 i28 1))) (i22 i17 (i24 i28 1))) (i22 i18 (i24 i28 1))) (i22 i19 (i24 i28 1))) (i22 i20 (i24 i28 1))) (i22 i21 (i24 i28 1))) (i22 i23 (i24 i28 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i22 i12 (i24 i11 1)) (i22 i12 (i24 i28 1))) (i22 i13 (i24 i28 1))) (i22 i14 (i24 i28 1))) (i22 i15 (i24 i28 1))) (i22 i16 (i24 i28 1))) (i22 i17 (i24 i28 1))) (i22 i18 (i24 i28 1))) (i22 i19 (i24 i28 1))) (i22 i20 (i24 i28 1))) (i22 i21 (i24 i28 1))) (i22 i23 (i24 i28 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i32 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i35 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i35 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i35 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i35 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i32 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i35 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i35 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i35 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i35 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i31 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i34 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i34 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i34 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i34 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i31 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i34 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i34 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i34 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i34 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #ca) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.13 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i23 i12 (i25 i11 1)) (i23 i12 (i25 i29 1))) (i23 i13 (i25 i29 1))) (i23 i14 (i25 i29 1))) (i23 i15 (i25 i29 1))) (i23 i16 (i25 i29 1))) (i23 i17 (i25 i29 1))) (i23 i18 (i25 i29 1))) (i23 i19 (i25 i29 1))) (i23 i20 (i25 i29 1))) (i23 i21 (i25 i29 1))) (i23 i22 (i25 i29 1))) (i23 i24 (i25 i29 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i23 i12 (i25 i11 1)) (i23 i12 (i25 i29 1))) (i23 i13 (i25 i29 1))) (i23 i14 (i25 i29 1))) (i23 i15 (i25 i29 1))) (i23 i16 (i25 i29 1))) (i23 i17 (i25 i29 1))) (i23 i18 (i25 i29 1))) (i23 i19 (i25 i29 1))) (i23 i20 (i25 i29 1))) (i23 i21 (i25 i29 1))) (i23 i22 (i25 i29 1))) (i23 i24 (i25 i29 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i33 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i36 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i36 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i36 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i36 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i33 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i36 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i36 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i36 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i36 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i32 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i35 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i35 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i35 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i35 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i32 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i35 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i35 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i35 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i35 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #cb) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.14 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i24 i12 (i26 i11 1)) (i24 i12 (i26 i30 1))) (i24 i13 (i26 i30 1))) (i24 i14 (i26 i30 1))) (i24 i15 (i26 i30 1))) (i24 i16 (i26 i30 1))) (i24 i17 (i26 i30 1))) (i24 i18 (i26 i30 1))) (i24 i19 (i26 i30 1))) (i24 i20 (i26 i30 1))) (i24 i21 (i26 i30 1))) (i24 i22 (i26 i30 1))) (i24 i23 (i26 i30 1))) (i24 i25 (i26 i30 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i24 i12 (i26 i11 1)) (i24 i12 (i26 i30 1))) (i24 i13 (i26 i30 1))) (i24 i14 (i26 i30 1))) (i24 i15 (i26 i30 1))) (i24 i16 (i26 i30 1))) (i24 i17 (i26 i30 1))) (i24 i18 (i26 i30 1))) (i24 i19 (i26 i30 1))) (i24 i20 (i26 i30 1))) (i24 i21 (i26 i30 1))) (i24 i22 (i26 i30 1))) (i24 i23 (i26 i30 1))) (i24 i25 (i26 i30 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i34 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i37 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i37 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i37 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i37 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i34 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i37 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i37 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i37 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i37 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i33 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i36 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i36 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i36 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i36 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i33 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i36 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i36 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i36 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i36 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #cc) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.15 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i25 i12 (i27 i11 1)) (i25 i12 (i27 i31 1))) (i25 i13 (i27 i31 1))) (i25 i14 (i27 i31 1))) (i25 i15 (i27 i31 1))) (i25 i16 (i27 i31 1))) (i25 i17 (i27 i31 1))) (i25 i18 (i27 i31 1))) (i25 i19 (i27 i31 1))) (i25 i20 (i27 i31 1))) (i25 i21 (i27 i31 1))) (i25 i22 (i27 i31 1))) (i25 i23 (i27 i31 1))) (i25 i24 (i27 i31 1))) (i25 i26 (i27 i31 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i25 i12 (i27 i11 1)) (i25 i12 (i27 i31 1))) (i25 i13 (i27 i31 1))) (i25 i14 (i27 i31 1))) (i25 i15 (i27 i31 1))) (i25 i16 (i27 i31 1))) (i25 i17 (i27 i31 1))) (i25 i18 (i27 i31 1))) (i25 i19 (i27 i31 1))) (i25 i20 (i27 i31 1))) (i25 i21 (i27 i31 1))) (i25 i22 (i27 i31 1))) (i25 i23 (i27 i31 1))) (i25 i24 (i27 i31 1))) (i25 i26 (i27 i31 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i35 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i38 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i38 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i38 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i38 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i35 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i38 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i38 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i38 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i38 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i34 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i37 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i37 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i37 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i37 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i34 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i37 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i37 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i37 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i37 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) #cc) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #cd) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.16 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i26 i12 (i28 i11 1)) (i26 i12 (i28 i32 1))) (i26 i13 (i28 i32 1))) (i26 i14 (i28 i32 1))) (i26 i15 (i28 i32 1))) (i26 i16 (i28 i32 1))) (i26 i17 (i28 i32 1))) (i26 i18 (i28 i32 1))) (i26 i19 (i28 i32 1))) (i26 i20 (i28 i32 1))) (i26 i21 (i28 i32 1))) (i26 i22 (i28 i32 1))) (i26 i23 (i28 i32 1))) (i26 i24 (i28 i32 1))) (i26 i25 (i28 i32 1))) (i26 i27 (i28 i32 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i26 i12 (i28 i11 1)) (i26 i12 (i28 i32 1))) (i26 i13 (i28 i32 1))) (i26 i14 (i28 i32 1))) (i26 i15 (i28 i32 1))) (i26 i16 (i28 i32 1))) (i26 i17 (i28 i32 1))) (i26 i18 (i28 i32 1))) (i26 i19 (i28 i32 1))) (i26 i20 (i28 i32 1))) (i26 i21 (i28 i32 1))) (i26 i22 (i28 i32 1))) (i26 i23 (i28 i32 1))) (i26 i24 (i28 i32 1))) (i26 i25 (i28 i32 1))) (i26 i27 (i28 i32 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i36 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i39 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i39 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i39 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i39 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i36 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i39 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i39 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i39 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i39 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i35 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i38 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i38 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i38 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i38 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i35 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i38 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i38 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i38 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i38 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) #cc) #cd) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #ce) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
equality.growing.17 (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> equalsData (mapData i2) (mapData i1)) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i27 i12 (i29 i11 1)) (i27 i12 (i29 i33 1))) (i27 i13 (i29 i33 1))) (i27 i14 (i29 i33 1))) (i27 i15 (i29 i33 1))) (i27 i16 (i29 i33 1))) (i27 i17 (i29 i33 1))) (i27 i18 (i29 i33 1))) (i27 i19 (i29 i33 1))) (i27 i20 (i29 i33 1))) (i27 i21 (i29 i33 1))) (i27 i22 (i29 i33 1))) (i27 i23 (i29 i33 1))) (i27 i24 (i29 i33 1))) (i27 i25 (i29 i33 1))) (i27 i26 (i29 i33 1))) (i27 i28 (i29 i33 1))) (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i1 addInteger (i27 i12 (i29 i11 1)) (i27 i12 (i29 i33 1))) (i27 i13 (i29 i33 1))) (i27 i14 (i29 i33 1))) (i27 i15 (i29 i33 1))) (i27 i16 (i29 i33 1))) (i27 i17 (i29 i33 1))) (i27 i18 (i29 i33 1))) (i27 i19 (i29 i33 1))) (i27 i20 (i29 i33 1))) (i27 i21 (i29 i33 1))) (i27 i22 (i29 i33 1))) (i27 i23 (i29 i33 1))) (i27 i24 (i29 i33 1))) (i27 i25 (i29 i33 1))) (i27 i26 (i29 i33 1))) (i27 i28 (i29 i33 1)))) (\i0 -> \i0 -> \i0 -> i4 (\i0 -> \i0 -> i7 i5 i2 i1) i2 i1)) (\i0 -> \i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i37 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i40 (mkPairData i2 (mapData (i11 (unMapData (i14 i6)) (unMapData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i40 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i40 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i40 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i37 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i40 (mkPairData i2 (mapData (i11 (unMapData (i14 i3)) (unMapData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i40 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i40 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i40 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1))))) (\i0 -> \i0 -> \i0 -> force (i7 i2 (delay i1) (delay (i4 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i12 i1 (delay (i36 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i39 (mkPairData i2 (iData (i11 (unIData (i13 i6)) (unIData (i13 i3))))) ((\i0 -> force (i16 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i18 i6) (i19 i6) i1)))) (i18 i4)))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i39 i6 (force (i15 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i17 i5) (i18 i5) i4)))))) (delay (i39 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i39 i6 i5) (i18 i4))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))) (delay (force (i12 i1 (delay (i36 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i14 (equalsData i2 i1) (delay (i39 (mkPairData i2 (iData (i11 (unIData (i13 i3)) (unIData (i13 i6))))) ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) i5))) (delay (force (i14 (lessThanByteString (unBData i2) (unBData i1)) (delay (i39 i6 (force (i15 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i17 i4) (i18 i4) i5)))))) (delay (i39 i3 ((\i0 -> \i0 -> force (i17 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i19 i2) (i20 i2) i1)))) (i18 i4) (i39 i6 i5))))))))) (i15 i2)) (i14 i4)) (i14 i1)))))))) (\i0 -> \i0 -> i2) (i9 i2) (i10 i2) i1))))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) #736f6d65746f6b656e) #c0) #c1) #c2) #c3) #c4) #c5) #c6) #c7) #c8) #c9) #ca) #cb) #cc) #cd) #ce) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #cf) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #746f6b656e))
normalize.identity (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i8 ((\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i10 i1))) i1) (\i0 -> (\i0 -> \i0 -> i5 (\i0 -> i3 (unIData (i11 i1))) i1) (\i0 -> lessThanInteger 0 i1) i1) i1) (delay i1) (delay (force (force trace "Negative amount in Value" (delay error)))))) ((\i0 -> (\i0 -> i6 (\i0 -> i2 (unMapData i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (mapData i1)) (delay (\i0 -> \i0 -> force i1)))) (\i0 -> (\i0 -> force (i10 (force nullList i1) (delay (\i0 -> \i0 -> force i1)) (delay (\i0 -> \i0 -> i2 i3)))) (i6 (\i0 -> force (i10 (equalsData i1 (iData 0)) (delay (\i0 -> \i0 -> force i1)) (delay (\i0 -> \i0 -> i2 i3)))) i1)) i1) ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i13 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i18 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i20 (equalsData i2 i1) (delay (i28 (mkPairData i2 (mapData (i11 (unMapData (i19 i6)) (unMapData (i19 i3))))) ((\i0 -> force (i22 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i24 i6) (i25 i6) i1)))) (i24 i4)))) (delay (force (i20 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i6 (force (i21 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i23 i5) (i24 i5) i4)))))) (delay (i28 i3 ((\i0 -> \i0 -> force (i23 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i25 i2) (i26 i2) i1)))) (i28 i6 i5) (i24 i4))))))))) (i21 i2)) (i20 i4)) (i20 i1)))))) (delay (force (i18 i1 (delay (i25 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i20 (equalsData i2 i1) (delay (i28 (mkPairData i2 (mapData (i11 (unMapData (i19 i3)) (unMapData (i19 i6))))) ((\i0 -> \i0 -> force (i23 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i25 i2) (i26 i2) i1)))) (i24 i4) i5))) (delay (force (i20 (lessThanByteString (unBData i2) (unBData i1)) (delay (i28 i6 (force (i21 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i23 i4) (i24 i4) i5)))))) (delay (i28 i3 ((\i0 -> \i0 -> force (i23 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i25 i2) (i26 i2) i1)))) (i24 i4) (i28 i6 i5))))))))) (i21 i2)) (i20 i4)) (i20 i1)))))))) (\i0 -> \i0 -> i2) (i15 i2) (i16 i2) i1)))) (\i0 -> \i0 -> force (i12 i2 (delay i1) (delay (i9 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i17 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i19 (equalsData i2 i1) (delay (i27 (mkPairData i2 (iData (addInteger (unIData (i18 i6)) (unIData (i18 i3))))) ((\i0 -> force (i21 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i23 i6) (i24 i6) i1)))) (i23 i4)))) (delay (force (i19 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i20 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i22 i5) (i23 i5) i4)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i22 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i24 i2) (i25 i2) i1)))) (i27 i6 i5) (i23 i4))))))))) (i20 i2)) (i19 i4)) (i19 i1)))))) (delay (force (i17 i1 (delay (i24 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i19 (equalsData i2 i1) (delay (i27 (mkPairData i2 (iData (addInteger (unIData (i18 i3)) (unIData (i18 i6))))) ((\i0 -> \i0 -> force (i22 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i24 i2) (i25 i2) i1)))) (i23 i4) i5))) (delay (force (i19 (lessThanByteString (unBData i2) (unBData i1)) (delay (i27 i6 (force (i20 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i22 i4) (i23 i4) i5)))))) (delay (i27 i3 ((\i0 -> \i0 -> force (i22 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i24 i2) (i25 i2) i1)))) (i23 i4) (i27 i6 i5))))))))) (i20 i2)) (i19 i4)) (i19 i1)))))))) (\i0 -> \i0 -> i2) (i14 i2) (i15 i2) i1)))) i2 i1) (i12 #c0 (i13 i17 1)) (i12 #c7 (i13 i17 1))))) (\i0 -> i5 (\i0 -> \i0 -> force (i10 i1 (delay True) (delay (force (i4 (i3 (i12 i1)) (delay (i2 (i13 i1)))))))))) (\i0 -> \i0 -> i7 i2 i1 i3)) (delay False)) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i8 i1 (delay i16) (delay ((\i0 -> i5 (i7 (i11 i2)) (\i0 -> i17 (mkPairData (i11 (i12 i3)) i1) i2) (delay i1)) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
normalize.empty (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> i3 (\i0 -> i2 (unMapData i1) (\i0 -> (\i0 -> \i0 -> \i0 -> i2 i3) (mapData i1)) (delay (\i0 -> \i0 -> force i1)))) (\i0 -> (\i0 -> force (i7 (force nullList i1) (delay (\i0 -> \i0 -> force i1)) (delay (\i0 -> \i0 -> i2 i3)))) (i3 (\i0 -> force (i7 (equalsData i1 (iData 0)) (delay (\i0 -> \i0 -> force i1)) (delay (\i0 -> \i0 -> i2 i3)))) i1)) i1) ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i10 i2 (delay i1) (delay (i7 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i16 i6)) (unMapData (i16 i3))))) ((\i0 -> force (i19 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i21 i6) (i22 i6) i1)))) (i21 i4)))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i20 i5) (i21 i5) i4)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i26 i6 i5) (i21 i4))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))) (delay (force (i15 i1 (delay (i23 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i17 (equalsData i2 i1) (delay (i26 (mkPairData i2 (mapData (i11 (unMapData (i16 i3)) (unMapData (i16 i6))))) ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) i5))) (delay (force (i17 (lessThanByteString (unBData i2) (unBData i1)) (delay (i26 i6 (force (i18 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i20 i4) (i21 i4) i5)))))) (delay (i26 i3 ((\i0 -> \i0 -> force (i20 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i22 i2) (i23 i2) i1)))) (i21 i4) (i26 i6 i5))))))))) (i18 i2)) (i17 i4)) (i17 i1)))))))) (\i0 -> \i0 -> i2) (i12 i2) (i13 i2) i1)))) (\i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (subtractInteger (unIData (i15 i6)) (unIData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i25 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i22 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i25 (mkPairData i2 (iData (subtractInteger (unIData (i15 i3)) (unIData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i25 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i25 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i25 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) i2 i1) (i9 i10 (i11 i15 1)) (i9 i10 (i11 i15 1)))) (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i8 i1 (delay i17) (delay ((\i0 -> i5 (i7 (i11 i2)) (\i0 -> i18 (mkPairData (i11 (i12 i3)) i1) i2) (delay i1)) (i2 (i11 i1)))))) i1)) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
assertSorted.succeeds (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i10 ((\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i12 i1))) i1) (\i0 -> force (i4 (force nullList (i6 i1)) (delay ((\i0 -> \i0 -> i5 (\i0 -> i3 (unIData (i13 i1))) i1) (\i0 -> equalsInteger i1 0) i1)))) i1) (delay (force (i6 "Abnormal Value" (delay error)))) (delay (i5 i1)))) ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i15 i2 (delay i1) (delay (i12 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i20 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i22 (equalsData i2 i1) (delay (i30 (mkPairData i2 (mapData (i11 (unMapData (i21 i6)) (unMapData (i21 i3))))) ((\i0 -> force (i24 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i26 i6) (i27 i6) i1)))) (i26 i4)))) (delay (force (i22 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i23 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i25 i5) (i26 i5) i4)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i25 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i27 i2) (i28 i2) i1)))) (i30 i6 i5) (i26 i4))))))))) (i23 i2)) (i22 i4)) (i22 i1)))))) (delay (force (i20 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i22 (equalsData i2 i1) (delay (i30 (mkPairData i2 (mapData (i11 (unMapData (i21 i3)) (unMapData (i21 i6))))) ((\i0 -> \i0 -> force (i25 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i27 i2) (i28 i2) i1)))) (i26 i4) i5))) (delay (force (i22 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i23 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i25 i4) (i26 i4) i5)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i25 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i27 i2) (i28 i2) i1)))) (i26 i4) (i30 i6 i5))))))))) (i23 i2)) (i22 i4)) (i22 i1)))))))) (\i0 -> \i0 -> i2) (i17 i2) (i18 i2) i1)))) (\i0 -> \i0 -> force (i14 i2 (delay i1) (delay (i11 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i19 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i21 (equalsData i2 i1) (delay (i29 (mkPairData i2 (iData (addInteger (unIData (i20 i6)) (unIData (i20 i3))))) ((\i0 -> force (i23 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i25 i6) (i26 i6) i1)))) (i25 i4)))) (delay (force (i21 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i6 (force (i22 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i24 i5) (i25 i5) i4)))))) (delay (i29 i3 ((\i0 -> \i0 -> force (i24 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i27 i2) i1)))) (i29 i6 i5) (i25 i4))))))))) (i22 i2)) (i21 i4)) (i21 i1)))))) (delay (force (i19 i1 (delay (i26 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i21 (equalsData i2 i1) (delay (i29 (mkPairData i2 (iData (addInteger (unIData (i20 i3)) (unIData (i20 i6))))) ((\i0 -> \i0 -> force (i24 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i27 i2) i1)))) (i25 i4) i5))) (delay (force (i21 (lessThanByteString (unBData i2) (unBData i1)) (delay (i29 i6 (force (i22 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i24 i4) (i25 i4) i5)))))) (delay (i29 i3 ((\i0 -> \i0 -> force (i24 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i27 i2) i1)))) (i25 i4) (i29 i6 i5))))))))) (i22 i2)) (i21 i4)) (i21 i1)))))))) (\i0 -> \i0 -> i2) (i16 i2) (i17 i2) i1)))) i2 i1) (i14 #c0 (i15 i19 1)) (i14 #c7 (i15 i19 1)))) (\i0 -> i7 (\i0 -> \i0 -> force (i12 i1 (delay False) (delay (force (i4 (i3 (i14 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> i8 i1 i2)) (delay True)) (\i0 -> i4 (\i0 -> \i0 -> force (i9 i1 (delay (\i0 -> i4)) (delay ((\i0 -> \i0 -> force (i10 (i1 i2) (delay (force (i6 i7 (delay error)))) (delay (i4 (i14 i3) (\i0 -> lessThanByteString i1 i3))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> False))) (force trace)) "unsorted map") (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
assertSorted.fails on malsorted symbols (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i7 ((\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i8 i1))) i1) (\i0 -> force (i4 (force nullList (i7 i1)) (delay ((\i0 -> \i0 -> i5 (\i0 -> i3 (unIData (i9 i1))) i1) (\i0 -> equalsInteger i1 0) i1)))) i1) (delay (force (i8 "Abnormal Value" (delay error)))) (delay (i6 i1)))) ((\i0 -> \i0 -> i12 (\i0 -> \i0 -> force (i15 i1 (delay i3) (delay (i21 (i16 i1) (i2 (i17 i1)))))) i2) (i14 #c7 (i15 i19 1)) (i14 #c0 (i15 i19 1)))) (\i0 -> i10 (\i0 -> \i0 -> force (i13 i1 (delay False) (delay (force (i4 (i3 (i14 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> i5 i1 i2)) (delay True)) (force (force sndPair))) (\i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay (\i0 -> i4)) (delay ((\i0 -> \i0 -> force (i6 (i1 i2) (delay (force (i7 i8 (delay error)))) (delay (i4 (i13 i3) (\i0 -> lessThanByteString i1 i3))))) (unBData (i7 (i10 i1))))))) i1 (\i0 -> False))) (force ifThenElse)) (force trace)) "unsorted map") (force (force fstPair))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force headList)) (force tailList)) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
assertSorted.fails on zero quantities (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i10 ((\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i12 i1))) i1) (\i0 -> force (i4 (force nullList (i6 i1)) (delay ((\i0 -> \i0 -> i5 (\i0 -> i3 (unIData (i13 i1))) i1) (\i0 -> equalsInteger i1 0) i1)))) i1) (delay (force (i6 "Abnormal Value" (delay error)))) (delay (i5 i1)))) ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i15 i2 (delay i1) (delay (i12 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i20 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i22 (equalsData i2 i1) (delay (i31 (mkPairData i2 (mapData (i11 (unMapData (i21 i6)) (unMapData (i21 i3))))) ((\i0 -> force (i24 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i26 i6) (i27 i6) i1)))) (i26 i4)))) (delay (force (i22 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i6 (force (i23 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i25 i5) (i26 i5) i4)))))) (delay (i31 i3 ((\i0 -> \i0 -> force (i25 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i27 i2) (i28 i2) i1)))) (i31 i6 i5) (i26 i4))))))))) (i23 i2)) (i22 i4)) (i22 i1)))))) (delay (force (i20 i1 (delay (i28 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i22 (equalsData i2 i1) (delay (i31 (mkPairData i2 (mapData (i11 (unMapData (i21 i3)) (unMapData (i21 i6))))) ((\i0 -> \i0 -> force (i25 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i27 i2) (i28 i2) i1)))) (i26 i4) i5))) (delay (force (i22 (lessThanByteString (unBData i2) (unBData i1)) (delay (i31 i6 (force (i23 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i25 i4) (i26 i4) i5)))))) (delay (i31 i3 ((\i0 -> \i0 -> force (i25 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i27 i2) (i28 i2) i1)))) (i26 i4) (i31 i6 i5))))))))) (i23 i2)) (i22 i4)) (i22 i1)))))))) (\i0 -> \i0 -> i2) (i17 i2) (i18 i2) i1)))) (\i0 -> \i0 -> force (i14 i2 (delay i1) (delay (i11 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i19 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i21 (equalsData i2 i1) (delay (i30 (mkPairData i2 (iData (subtractInteger (unIData (i20 i6)) (unIData (i20 i3))))) ((\i0 -> force (i23 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i25 i6) (i26 i6) i1)))) (i25 i4)))) (delay (force (i21 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i22 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i24 i5) (i25 i5) i4)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i24 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i27 i2) i1)))) (i30 i6 i5) (i25 i4))))))))) (i22 i2)) (i21 i4)) (i21 i1)))))) (delay (force (i19 i1 (delay (i27 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i21 (equalsData i2 i1) (delay (i30 (mkPairData i2 (iData (subtractInteger (unIData (i20 i3)) (unIData (i20 i6))))) ((\i0 -> \i0 -> force (i24 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i27 i2) i1)))) (i25 i4) i5))) (delay (force (i21 (lessThanByteString (unBData i2) (unBData i1)) (delay (i30 i6 (force (i22 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i24 i4) (i25 i4) i5)))))) (delay (i30 i3 ((\i0 -> \i0 -> force (i24 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i26 i2) (i27 i2) i1)))) (i25 i4) (i30 i6 i5))))))))) (i22 i2)) (i21 i4)) (i21 i1)))))))) (\i0 -> \i0 -> i2) (i16 i2) (i17 i2) i1)))) i2 i1) (i14 i15 (i16 i20 1)) (i14 i15 (i16 i20 1)))) (\i0 -> i7 (\i0 -> \i0 -> force (i12 i1 (delay False) (delay (force (i4 (i3 (i14 i1)) (delay (i2 (i15 i1)))))))))) (\i0 -> i8 i1 i2)) (delay True)) (\i0 -> i4 (\i0 -> \i0 -> force (i9 i1 (delay (\i0 -> i4)) (delay ((\i0 -> \i0 -> force (i10 (i1 i2) (delay (force (i6 i7 (delay error)))) (delay (i4 (i14 i3) (\i0 -> lessThanByteString i1 i3))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> False))) (force trace)) "unsorted map") (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i5 (bData i2) (mapData i1))) #c0) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #736f6d65746f6b656e))
assertSorted.fails on empty token map (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i9 ((\i0 -> \i0 -> i4 (\i0 -> i3 (unMapData (i8 i1))) i1) (\i0 -> force (i4 (force nullList (i7 i1)) (delay ((\i0 -> \i0 -> i5 (\i0 -> i3 (unIData (i9 i1))) i1) (\i0 -> equalsInteger i1 0) i1)))) i1) (delay (force (i10 "Abnormal Value" (delay error)))) (delay (i6 i1)))) ((\i0 -> \i0 -> (\i0 -> \i0 -> force mkCons (mkPairData i2 i1) i18) (bData i2) (mapData i1)) #c0 i14)) (\i0 -> i6 (\i0 -> \i0 -> force (i9 i1 (delay False) (delay (force (i4 (i3 (i15 i1)) (delay (i2 (i13 i1)))))))))) (\i0 -> i7 i1 i2)) (delay True)) (force (force sndPair))) (\i0 -> i2 (\i0 -> \i0 -> force (i5 i1 (delay (\i0 -> i4)) (delay ((\i0 -> \i0 -> force (i8 (i1 i2) (delay (force (i9 i10 (delay error)))) (delay (i4 (i11 i3) (\i0 -> lessThanByteString i1 i3))))) (unBData (i10 (i11 i1))))))) i1 (\i0 -> False))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force chooseList))) (force ifThenElse)) (force trace)) "unsorted map") (force tailList)) (force (force fstPair))) (force headList)) [  ]))
Ada.adaSymbol (program 1.0.0 #)
Ada.adaToken (program 1.0.0 #)
Ada.lovelaceValueOf (program 1.0.0 ((\i0 -> (\i0 -> \i0 -> force (force (force chooseList) i1 (delay 0) (delay (force ifThenElse (equalsData (force (force fstPair) (i3 i1)) (bData #)) (unIData (i2 (i3 (unMapData (i2 (i3 i1)))))) 0)))) (force (force sndPair))) (force headList)))
Ada.isAdaOnlyValue.itself (program 1.0.0 (\i0 -> force (force (force chooseList) i1 (delay True) (delay ((\i0 -> \i0 -> force ifThenElse i2 i1 False) (force nullList (force tailList i1)) (equalsData (force (force fstPair) (force headList i1)) (bData #)))))))
Ada.isAdaOnlyValue.true on empty (program 1.0.0 ((\i0 -> force (force (force chooseList) i1 (delay True) (delay ((\i0 -> \i0 -> force ifThenElse i2 i1 False) (force nullList (force tailList i1)) (equalsData (force (force fstPair) (force headList i1)) (bData #)))))) [  ]))
Ada.isAdaOnlyValue.trivially false (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> force (force (force chooseList) i1 (delay True) (delay ((\i0 -> \i0 -> force ifThenElse i2 i1 False) (force nullList (force tailList i1)) (equalsData (force (force fstPair) (force headList i1)) (bData #)))))) ((\i0 -> \i0 -> i3 (bData i2) (mapData i1)) #c0 ((\i0 -> \i0 -> i3 (bData i2) (iData i1)) #736f6d65746f6b656e 1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
Ada.isAdaOnlyValue.less trivially false (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (i5 i1 (delay True) (delay ((\i0 -> \i0 -> i6 i2 i1 False) (force nullList (i8 i1)) (equalsData (i6 (i7 i1)) (bData i14)))))) ((\i0 -> \i0 -> (\i0 -> \i0 -> \i0 -> force (i9 i2 (delay i1) (delay (i6 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i14 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i15 i6)) (unMapData (i15 i3))))) ((\i0 -> force (i18 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i20 i6) (i21 i6) i1)))) (i20 i4)))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i17 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i19 i5) (i20 i5) i4)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i24 i6 i5) (i20 i4))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))) (delay (force (i14 i1 (delay (i21 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i16 (equalsData i2 i1) (delay (i24 (mkPairData i2 (mapData (i11 (unMapData (i15 i3)) (unMapData (i15 i6))))) ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) i5))) (delay (force (i16 (lessThanByteString (unBData i2) (unBData i1)) (delay (i24 i6 (force (i17 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i19 i4) (i20 i4) i5)))))) (delay (i24 i3 ((\i0 -> \i0 -> force (i19 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i21 i2) (i22 i2) i1)))) (i20 i4) (i24 i6 i5))))))))) (i17 i2)) (i16 i4)) (i16 i1)))))))) (\i0 -> \i0 -> i2) (i11 i2) (i12 i2) i1)))) (\i0 -> \i0 -> force (i8 i2 (delay i1) (delay (i5 (\i0 -> \i0 -> \i0 -> \i0 -> \i0 -> force (i4 (delay (force (i13 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (addInteger (unIData (i14 i6)) (unIData (i14 i3))))) ((\i0 -> force (i17 i6 (delay i1) (delay (i9 (\i0 -> \i0 -> i2) (i19 i6) (i20 i6) i1)))) (i19 i4)))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i16 i5 (delay i4) (delay (i8 (\i0 -> \i0 -> i2) (i18 i5) (i19 i5) i4)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i23 i6 i5) (i19 i4))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))) (delay (force (i13 i1 (delay (i20 i3 i2)) (delay ((\i0 -> (\i0 -> (\i0 -> force (i15 (equalsData i2 i1) (delay (i23 (mkPairData i2 (iData (addInteger (unIData (i14 i3)) (unIData (i14 i6))))) ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) i5))) (delay (force (i15 (lessThanByteString (unBData i2) (unBData i1)) (delay (i23 i6 (force (i16 i4 (delay i5) (delay (i8 (\i0 -> \i0 -> i2) (i18 i4) (i19 i4) i5)))))) (delay (i23 i3 ((\i0 -> \i0 -> force (i18 i2 (delay i1) (delay (i10 (\i0 -> \i0 -> i2) (i20 i2) (i21 i2) i1)))) (i19 i4) (i23 i6 i5))))))))) (i16 i2)) (i15 i4)) (i15 i1)))))))) (\i0 -> \i0 -> i2) (i10 i2) (i11 i2) i1)))) i2 i1) (i8 #c0 (i9 #736f6d65746f6b656e 1)) (i8 i13 (i9 i13 10000000)))) (\i0 -> (\i0 -> i2 (\i0 -> i2 i2 i1)) (\i0 -> i2 (\i0 -> i2 i2 i1)))) (force (force sndPair))) (force ifThenElse)) (force (force chooseList))) (force (force fstPair))) (force headList)) (force tailList)) (\i0 -> \i0 -> i4 (bData i2) (mapData i1))) (\i0 -> \i0 -> i3 (bData i2) (iData i1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #))
Ada.adaOnlyValue.itself (program 1.0.0 ((\i0 -> (\i0 -> \i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (i2 i1)) (bData #)) ((\i0 -> force mkCons i1 i4) (i2 i1)) i3)))) (force headList)) [  ]))
Ada.adaOnlyValue.on empty (program 1.0.0 ((\i0 -> (\i0 -> force (force (force chooseList) i2 (delay i2) (delay (force ifThenElse (equalsData (force (force fstPair) (i1 i2)) (bData #)) ((\i0 -> force mkCons i1 i3) (i1 i2)) i2)))) (force headList)) [  ]))
Ada.adaOnlyValue.on non-Ada (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (i2 i1)) (bData #)) ((\i0 -> i5 i1 i6) (i2 i1)) i5)))) ((\i0 -> \i0 -> i4 (bData i2) (mapData i1)) #c0 ((\i0 -> \i0 -> i4 (bData i2) (iData i1)) #736f6d65746f6b656e 1))) (force headList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
Ada.adaOnlyValue.on Ada (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (i2 i1)) (bData i6)) ((\i0 -> i5 i1 i6) (i2 i1)) i5)))) ((\i0 -> i3 (bData i6) (mapData i1)) ((\i0 -> i3 (bData i6) (iData i1)) 10000000))) (force headList)) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #))
Ada.noAdaValue.itself (program 1.0.0 (\i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (force headList i1)) (bData #)) (force tailList i1) i1)))))
Ada.noAdaValue.on empty (program 1.0.0 ((\i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (force headList i1)) (bData #)) (force tailList i1) i1)))) [  ]))
Ada.noAdaValue.on non-Ada (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (force headList i1)) (bData #)) (force tailList i1) i1)))) ((\i0 -> \i0 -> i3 (bData i2) (mapData i1)) #c0 ((\i0 -> \i0 -> i3 (bData i2) (iData i1)) #736f6d65746f6b656e 1))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]))
Ada.noAdaValue.on Ada (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> force (force (force chooseList) i1 (delay i1) (delay (force ifThenElse (equalsData (force (force fstPair) (force headList i1)) (bData i5)) (force tailList i1) i1)))) ((\i0 -> i2 (bData i5) (mapData i1)) ((\i0 -> i2 (bData i5) (iData i1)) 10000000))) (\i0 -> \i0 -> i3 (mkPairData i2 i1) i4)) (force mkCons)) [  ]) #))