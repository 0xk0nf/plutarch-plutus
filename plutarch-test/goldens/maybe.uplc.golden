eq.true.nothing (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> force ((\i0 -> \i0 -> force ifThenElse i2 i1 (delay False)) True (delay (equalsInteger i2 i1)))) (delay False)) (delay (i1 (\i0 -> False) (delay True)))) (\i0 -> \i0 -> force i1) (\i0 -> \i0 -> force i1)))
eq.true.just (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> force ((\i0 -> \i0 -> force ifThenElse i2 i1 (delay False)) True (delay (equalsInteger i2 i1)))) (delay False)) (delay (i1 (\i0 -> False) (delay True)))) (\i0 -> \i0 -> i2 42) (\i0 -> \i0 -> i2 42)))
eq.false.nothing-just (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> force ((\i0 -> \i0 -> force ifThenElse i2 i1 (delay False)) True (delay (equalsInteger i2 i1)))) (delay False)) (delay (i1 (\i0 -> False) (delay True)))) (\i0 -> \i0 -> force i1) (\i0 -> \i0 -> i2 42)))
eq.false.just-just (program 1.0.0 ((\i0 -> \i0 -> i2 (\i0 -> i2 (\i0 -> force ((\i0 -> \i0 -> force ifThenElse i2 i1 (delay False)) True (delay (equalsInteger i2 i1)))) (delay False)) (delay (i1 (\i0 -> False) (delay True)))) (\i0 -> \i0 -> i2 24) (\i0 -> \i0 -> i2 42)))