product.exa1 (program 1.0.0 3628800)
product.exa1 (program 1.0.0 1)
sum.exa1 (program 1.0.0 55)
sum.exa1 (program 1.0.0 0)
exp.rational.exa1 (program 1.0.0 (\i0 -> i1 ((\i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) i1) i2 (divideInteger i1 2))))))) 4 100) ((\i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) i1) i2 (divideInteger i1 2))))))) 3 100)))
exp.rational.exa1 (program 1.0.0 (\i0 -> i1 ((\i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) i1) i2 (divideInteger i1 2))))))) 1 0) ((\i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) ((\i0 -> (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) (\i0 -> (\i0 -> \i0 -> \i0 -> force (force ifThenElse (equalsInteger i1 0) (delay 1) (delay (multiplyInteger (force (force ifThenElse ((\i0 -> equalsInteger (modInteger i1 2) 1) i1) (delay i2) (delay 1))) ((\i0 -> multiplyInteger i1 i1) (i3 i2 (divideInteger i1 2))))))) (\i0 -> i2 i2 i1)) i1) i2 (divideInteger i1 2))))))) 2 0)))
exp.integer.exa1 (program 1.0.0 1606938044258990275541962092341162602522202993782792835301376)
exp.integer.exa1 (program 1.0.0 1)