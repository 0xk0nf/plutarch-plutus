eq.true (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i7 (force (i7 True (delay (equalsInteger i4 i2)))) (delay (equalsString i3 i1)))))) (\i0 -> i1 42 i5) (\i0 -> i1 42 i5)) (\i0 -> \i0 -> i3 i2 i1 i4)) (force ifThenElse)) (delay False)) "Hello"))
eq.false.fst (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i7 (force (i7 True (delay (equalsInteger i4 i2)))) (delay (equalsString i3 i1)))))) (\i0 -> i1 42 i5) (\i0 -> i1 24 i5)) (\i0 -> \i0 -> i3 i2 i1 i4)) (force ifThenElse)) (delay False)) "Hello"))
eq.false.snd (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i7 (force (i7 True (delay (equalsInteger i4 i2)))) (delay (equalsString i3 i1)))))) (\i0 -> i1 42 "Hello") (\i0 -> i1 42 "World")) (\i0 -> \i0 -> i3 i2 i1 i4)) (force ifThenElse)) (delay False)))
eq.false.both (program 1.0.0 ((\i0 -> (\i0 -> (\i0 -> (\i0 -> \i0 -> i2 (\i0 -> \i0 -> i3 (\i0 -> \i0 -> force (i7 (force (i7 True (delay (equalsInteger i4 i2)))) (delay (equalsString i3 i1)))))) (\i0 -> i1 42 "Hello") (\i0 -> i1 24 "World")) (\i0 -> \i0 -> i3 i2 i1 i4)) (force ifThenElse)) (delay False)))